 TypeSystemSwiftTypeRef("ClassROTPointerAuth")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ClassROTPointerAuth")::CreateInstance(Module)
 SwiftASTContextForModule("ClassROTPointerAuth")::DeserializeAllCompilerFlags() -- Found 1 AST file data entries.
 SwiftASTContextForModule("ClassROTPointerAuth")::DeserializeAllCompilerFlags() -- SDK path from module "ClassROTPointerAuth" was "".
 SwiftASTContextForModule("ClassROTPointerAuth")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx11.0.
 SwiftASTContextForModule("ClassROTPointerAuth")::CreateInstance() -- No serialized SDK path.
 SwiftASTContextForModule("ClassROTPointerAuth")::CreateInstance() -- Host SDK path for sdk MacOSX12.3.sdk is /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk.
 SwiftASTContextForModule("ClassROTPointerAuth")::SetTriple("x86_64-apple-macosx11.0.0") setting to "x86_64-apple-macosx11.0.0"
 SwiftASTContext::GetResourceDir() -- trying toolchain path: 
 SwiftASTContext::GetResourceDir() -- trying Xcode path: /Applications/Xcode.app/Contents
 SwiftASTContext::GetResourceDir() -- trying Xcode-based lib path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContext::GetResourceDir() -- found Swift resource dir via Xcode contents path + default toolchain relative dir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContextForModule("ClassROTPointerAuth")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ClassROTPointerAuth")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ClassROTPointerAuth")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ClassROTPointerAuth")::RegisterSectionModules("ClassROTPointerAuth") retrieved 1 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ClassROTPointerAuth")::() -- parsed module "ClassROTPointerAuth" from Swift AST section 1/1 in image "ClassROTPointerAuth".
 SwiftASTContextForModule("ClassROTPointerAuth")::GetModule("ClassROTPointerAuth")
 SwiftASTContextForModule("ClassROTPointerAuth")::GetModule("ClassROTPointerAuth") -- found ClassROTPointerAuth
 SwiftASTContextForModule("ClassROTPointerAuth")::CreateInstance((Module*)0x7fced9d04098, "ClassROTPointerAuth") = 0x7fced9a28470
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration(SwiftASTContext*)0x7fced9a28470:
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Architecture                 : x86_64-apple-macosx11.0.0
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   SDK path                     : /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Runtime resource path        : /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Runtime library paths        : (2 items)
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     /usr/lib/swift
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Runtime library import paths : (2 items)
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Framework search paths       : (0 items)
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Import search paths          : (0 items)
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --   Extra clang arguments        : (75 items)
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fno-implicit-modules
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fno-implicit-module-maps
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=ImageIO=.build/x86_64-apple-macosx/debug/ModuleCache/ImageIO-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ImageIO.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=SwiftUI=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftUI-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Dispatch=.build/x86_64-apple-macosx/debug/ModuleCache/Dispatch-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dispatch/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Darwin=.build/x86_64-apple-macosx/debug/ModuleCache/Darwin-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=os=.build/x86_64-apple-macos-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41x/debug/ModuleCache/os-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Accessibility=.build/x86_64-apple-macosx/debug/ModuleCache/Accessibility-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Accessibility.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreText=.build/x86_64-apple-macosx/debug/ModuleCache/CoreText-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreText.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=UniformTypeIdentifiers=.build/x86_64-apple-macosx/debug/ModuleCache/UniformTypeIdentifiers-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/UniformTypeIdentifiers.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreFoundation=.build/x86_64-apple-macosx/debug/ModuleCache/CoreFoundation-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreFoundation.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=ObjectiveC=.build/x86_64-apple-macosx/debug/ModuleCache/ObjectiveC-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/objc/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=SwiftShims=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift/shims/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Security=.build/x86_64-apple-macosx/debug/ModuleCache/Security-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Security.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreGraphics=.build/x86_64-apple-macosx/debug/ModuleCache/CoreGraphics-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreGraphics.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=_Builtin_stddef_max_align_t=.build/x86_64-apple-macosx/debug/ModuleCache/_Builtin_stddef_max_align_t-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/clang/include/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=DiskArbitration=.build/x86_64-apple-macosx/debug/ModuleCache/DiskArbitration-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/DiskArbitration.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=os_object=.build/x86_64-apple-macosx/debug/ModuleCache/os_object-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreServices=.build/x86_64-apple-macosx/debug/ModuleCache/CoreServices-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreServices.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=os_workgroup=.build/x86_64-apple-macosx/debug/ModuleCache/os_workgroup-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=XPC=.build/x86_64-apple-macosx/debug/ModuleCache/XPC-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/xpc/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=QuartzCore=.build/x86_64-apple-macosx/debug/ModuleCache/QuartzCore-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/QuartzCore.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Foundation=.build/x86_64-apple-macosx/debug/ModuleCache/Foundation-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Foundation.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=OpenGL=.build/x86_64-apple-macosx/debug/ModuleCache/OpenGL-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenGL.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=AppKit=.build/x86_64-apple-macosx/debug/ModuleCache/AppKit-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AppKit.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=ColorSync=.build/x86_64-apple-macosx/debug/ModuleCache/ColorSync-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ColorSync.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=DeveloperToolsSupport=.build/x86_64-apple-macosx/debug/ModuleCache/DeveloperToolsSupport-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/DeveloperToolsSupport.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=MachO=.build/x86_64-apple-macosx/debug/ModuleCache/MachO-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach-o/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=launch=.build/x86_64-apple-macosx/debug/ModuleCache/launch-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=IOSurface=.build/x86_64-apple-macosx/debug/ModuleCache/IOSurface-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/IOSurface.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=ApplicationServices=.build/x86_64-apple-macosx/debug/ModuleCache/ApplicationServices-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ApplicationServices.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreData=.build/x86_64-apple-macosx/debug/ModuleCache/CoreData-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreData.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Metal=.build/x86_64-apple-macosx/debug/ModuleCache/Metal-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Metal.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=SwiftOverlayShims=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftOverlayShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CFNetwork=.build/x86_64-apple-macosx/debug/ModuleCache/CFNetwork-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CFNetwork.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=_Builtin_intrinsics=.build/x86_64-apple-macosx/debug/ModuleCache/_Builtin_intrinsics-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=ptrauth=.build/x86_64-apple-macosx/debug/ModuleCache/ptrauth-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=libkern=.build/x86_64-apple-macosx/debug/ModuleCache/libkern-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=Printer=.build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Users/ivhernandez13/dev/ClassROTPointerAuth/.build/x86_64-apple-macosx/debug/Printer.build/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreVideo=.build/x86_64-apple-macosx/debug/ModuleCache/CoreVideo-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreVideo.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=IOKit=.build/x86_64-apple-macosx/debug/ModuleCache/IOKit-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/IOKit.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-file=CoreImage=.build/x86_64-apple-macosx/debug/ModuleCache/CoreImage-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreImage.framework/Modules/module.modulemap
 SwiftASTContextForModule("ClassROTPointerAuth")::LogConfiguration() --     -I/Users/ivhernandez13/dev/ClassROTPointerAuth/Sources/Printer/include
 Adding reflection metadata in "/Users/ivhernandez13/dev/ClassROTPointerAuth/.build/x86_64-apple-macosx/debug/ClassROTPointerAuth"
 No reflection metadata in "/usr/lib/dyld"
 No reflection metadata in "/usr/lib/libobjc.A.dylib"
 No reflection metadata in "/usr/lib/libc++abi.dylib"
 No reflection metadata in "/usr/lib/liboah.dylib"
 No reflection metadata in "/usr/lib/libc++.1.dylib"
 No reflection metadata in "/usr/lib/libSystem.B.dylib"
 No reflection metadata in "/usr/lib/system/libcache.dylib"
 No reflection metadata in "/usr/lib/system/libcommonCrypto.dylib"
 No reflection metadata in "/usr/lib/system/libcompiler_rt.dylib"
 No reflection metadata in "/usr/lib/system/libcopyfile.dylib"
 No reflection metadata in "/usr/lib/system/libcorecrypto.dylib"
 No reflection metadata in "/usr/lib/system/libdispatch.dylib"
 No reflection metadata in "/usr/lib/system/libdyld.dylib"
 No reflection metadata in "/usr/lib/system/libkeymgr.dylib"
 No reflection metadata in "/usr/lib/system/libmacho.dylib"
 No reflection metadata in "/usr/lib/system/libquarantine.dylib"
 No reflection metadata in "/usr/lib/system/libremovefile.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_asl.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_blocks.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_c.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_collections.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_configuration.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_containermanager.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_coreservices.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_darwin.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_dnssd.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_featureflags.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_info.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_m.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_malloc.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_networkextension.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_notify.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_product_info_filter.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_sandbox.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_secinit.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_kernel.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_platform.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_pthread.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_symptoms.dylib"
 No reflection metadata in "/usr/lib/system/libsystem_trace.dylib"
 No reflection metadata in "/usr/lib/system/libunwind.dylib"
 No reflection metadata in "/usr/lib/system/libxpc.dylib"
 No reflection metadata in "/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap"
 No reflection metadata in "/System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport"
 No reflection metadata in "/System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity"
 No reflection metadata in "/usr/lib/libspindump.dylib"
 No reflection metadata in "/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers"
 No reflection metadata in "/usr/lib/libapp_launch_measurement.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout"
 No reflection metadata in "/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData"
 No reflection metadata in "/System/Library/Frameworks/Metal.framework/Versions/A/Metal"
 No reflection metadata in "/usr/lib/liblangid.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG"
 No reflection metadata in "/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight"
 No reflection metadata in "/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate"
 No reflection metadata in "/System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices"
 No reflection metadata in "/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface"
 No reflection metadata in "/usr/lib/libDiagnosticMessagesClient.dylib"
 No reflection metadata in "/usr/lib/libz.1.dylib"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation"
 No reflection metadata in "/usr/lib/libicucore.A.dylib"
 No reflection metadata in "/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox"
 No reflection metadata in "/System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/TextInput.framework/Versions/A/TextInput"
 No reflection metadata in "/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation"
 No reflection metadata in "/usr/lib/libMobileGestalt.dylib"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox"
 No reflection metadata in "/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore"
 No reflection metadata in "/System/Library/Frameworks/Security.framework/Versions/A/Security"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI"
 No reflection metadata in "/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio"
 No reflection metadata in "/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration"
 No reflection metadata in "/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport"
 No reflection metadata in "/usr/lib/libenergytrace.dylib"
 No reflection metadata in "/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL"
 No reflection metadata in "/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag"
 No reflection metadata in "/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync"
 No reflection metadata in "/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation"
 No reflection metadata in "/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage"
 No reflection metadata in "/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO"
 No reflection metadata in "/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking"
 No reflection metadata in "/usr/lib/libxml2.2.dylib"
 No reflection metadata in "/usr/lib/libcompression.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO"
 No reflection metadata in "/usr/lib/libate.dylib"
 No reflection metadata in "/usr/lib/liblzma.5.dylib"
 No reflection metadata in "/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration"
 No reflection metadata in "/usr/lib/libfakelink.dylib"
 No reflection metadata in "/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork"
 No reflection metadata in "/usr/lib/libarchive.2.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo"
 No reflection metadata in "/usr/lib/libbsm.0.dylib"
 No reflection metadata in "/usr/lib/libnetwork.dylib"
 No reflection metadata in "/usr/lib/system/libkxld.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer"
 No reflection metadata in "/usr/lib/libCoreEntitlements.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression"
 No reflection metadata in "/usr/lib/libcoretls.dylib"
 No reflection metadata in "/usr/lib/libcoretls_cfhelpers.dylib"
 No reflection metadata in "/usr/lib/libpam.2.dylib"
 No reflection metadata in "/usr/lib/libsqlite3.dylib"
 No reflection metadata in "/usr/lib/libxar.1.dylib"
 No reflection metadata in "/usr/lib/libbz2.1.0.dylib"
 No reflection metadata in "/usr/lib/libpcap.A.dylib"
 No reflection metadata in "/usr/lib/libdns_services.dylib"
 No reflection metadata in "/usr/lib/libapple_nghttp2.dylib"
 No reflection metadata in "/usr/lib/libiconv.2.dylib"
 No reflection metadata in "/usr/lib/libcharset.1.dylib"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices"
 No reflection metadata in "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList"
 No reflection metadata in "/usr/lib/libCheckFix.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP"
 No reflection metadata in "/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities"
 No reflection metadata in "/usr/lib/libmecabra.dylib"
 No reflection metadata in "/usr/lib/libmecab.dylib"
 No reflection metadata in "/usr/lib/libCRFSuite.dylib"
 No reflection metadata in "/usr/lib/libgermantok.dylib"
 No reflection metadata in "/usr/lib/libThaiTokenizer.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData"
 No reflection metadata in "/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon"
 No reflection metadata in "/usr/lib/libChineseTokenizer.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji"
 No reflection metadata in "/usr/lib/libcmph.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory"
 No reflection metadata in "/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory"
 No reflection metadata in "/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS"
 No reflection metadata in "/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation"
 No reflection metadata in "/usr/lib/libutil.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore"
 No reflection metadata in "/usr/lib/libxslt.1.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib"
 No reflection metadata in "/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib"
 No reflection metadata in "/usr/lib/libexpat.1.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG"
 No reflection metadata in "/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator"
 No reflection metadata in "/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient"
 No reflection metadata in "/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay"
 No reflection metadata in "/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia"
 No reflection metadata in "/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator"
 No reflection metadata in "/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders"
 No reflection metadata in "/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox"
 No reflection metadata in "/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard"
 No reflection metadata in "/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer"
 No reflection metadata in "/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler"
 No reflection metadata in "/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment"
 No reflection metadata in "/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/31001/Libraries/libGPUCompilerUtils.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport"
 No reflection metadata in "/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata"
 No reflection metadata in "/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk"
 No reflection metadata in "/usr/lib/libAudioStatistics.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy"
 No reflection metadata in "/usr/lib/libSMC.dylib"
 No reflection metadata in "/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI"
 No reflection metadata in "/usr/lib/libAudioToolboxUtility.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/OSAServicesClient.framework/Versions/A/OSAServicesClient"
 No reflection metadata in "/usr/lib/libperfcheck.dylib"
 No reflection metadata in "/usr/lib/libmis.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions"
 No reflection metadata in "/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools"
 No reflection metadata in "/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary"
 No reflection metadata in "/usr/lib/libIOReport.dylib"
 No reflection metadata in "/System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL"
 No reflection metadata in "/System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer"
 No reflection metadata in "/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis"
 No reflection metadata in "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI"
 No reflection metadata in "/usr/lib/libcups.2.dylib"
 No reflection metadata in "/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos"
 No reflection metadata in "/System/Library/Frameworks/GSS.framework/Versions/A/GSS"
 No reflection metadata in "/usr/lib/libresolv.9.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal"
 No reflection metadata in "/System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib"
 No reflection metadata in "/System/Library/Frameworks/Network.framework/Versions/A/Network"
 No reflection metadata in "/usr/lib/libheimdal-asn1.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth"
 No reflection metadata in "/System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession"
 No reflection metadata in "/System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience"
 No reflection metadata in "/System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration"
 No reflection metadata in "/System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog"
 No reflection metadata in "/System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore"
 Adding reflection metadata in "/System/Library/Frameworks/SwiftUI.framework/Versions/A/SwiftUI"
 Adding reflection metadata in "/System/Library/Frameworks/Accessibility.framework/Versions/A/Accessibility"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreMaterial.framework/Versions/A/CoreMaterial"
 No reflection metadata in "/System/Library/PrivateFrameworks/RenderBox.framework/Versions/A/RenderBox"
 Adding reflection metadata in "/System/Library/PrivateFrameworks/AttributeGraph.framework/Versions/A/AttributeGraph"
 Adding reflection metadata in "/System/Library/Frameworks/Combine.framework/Versions/A/Combine"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreGlyphs.framework/Versions/A/CoreGlyphs"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils"
 No reflection metadata in "/System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences"
 No reflection metadata in "/System/Library/PrivateFrameworks/RecapPerformanceTesting.framework/Versions/A/RecapPerformanceTesting"
 Adding reflection metadata in "/usr/lib/swift/libswiftAVFoundation.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftAccelerate.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftAppKit.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCloudKit.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCore.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreAudio.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreData.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreFoundation.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreGraphics.dylib"
 No reflection metadata in "/usr/lib/swift/libswiftCoreImage.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreLocation.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreMIDI.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftCoreMedia.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftDarwin.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftDispatch.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftFoundation.dylib"
 No reflection metadata in "/usr/lib/swift/libswiftIOKit.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftMetal.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftObjectiveC.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftQuartzCore.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftUniformTypeIdentifiers.dylib"
 No reflection metadata in "/usr/lib/swift/libswiftXPC.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswift_Concurrency.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftos.dylib"
 Adding reflection metadata in "/usr/lib/swift/libswiftsimd.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AXMediaUtilities.framework/Versions/A/AXMediaUtilities"
 No reflection metadata in "/System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/Versions/A/AccessibilitySharedSupport"
 No reflection metadata in "/usr/lib/libAccessibility.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AXCoreUtilities.framework/Versions/A/AXCoreUtilities"
 No reflection metadata in "/System/Library/Frameworks/NaturalLanguage.framework/Versions/A/NaturalLanguage"
 No reflection metadata in "/System/Library/PrivateFrameworks/AXAssetLoader.framework/Versions/A/AXAssetLoader"
 No reflection metadata in "/System/Library/PrivateFrameworks/Espresso.framework/Versions/A/Espresso"
 No reflection metadata in "/System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility"
 No reflection metadata in "/System/Library/PrivateFrameworks/MobileAsset.framework/Versions/A/MobileAsset"
 No reflection metadata in "/System/Library/Frameworks/CoreML.framework/Versions/A/CoreML"
 No reflection metadata in "/System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation"
 No reflection metadata in "/System/Library/Frameworks/AVFAudio.framework/Versions/A/AVFAudio"
 No reflection metadata in "/System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal"
 No reflection metadata in "/System/Library/PrivateFrameworks/DuetActivityScheduler.framework/Versions/A/DuetActivityScheduler"
 No reflection metadata in "/System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute"
 No reflection metadata in "/System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL"
 No reflection metadata in "/System/Library/PrivateFrameworks/MLAssetIO.framework/Versions/A/MLAssetIO"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreDuetContext.framework/Versions/A/CoreDuetContext"
 No reflection metadata in "/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport"
 No reflection metadata in "/System/Library/Frameworks/CoreTelephony.framework/Versions/A/CoreTelephony"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging"
 No reflection metadata in "/System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService"
 No reflection metadata in "/System/Library/Frameworks/Intents.framework/Versions/A/Intents"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol"
 No reflection metadata in "/System/Library/PrivateFrameworks/ProactiveSupport.framework/Versions/A/ProactiveSupport"
 No reflection metadata in "/System/Library/PrivateFrameworks/Rapport.framework/Versions/A/Rapport"
 No reflection metadata in "/System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics"
 No reflection metadata in "/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication"
 No reflection metadata in "/System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging"
 No reflection metadata in "/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreUtilsExtras.framework/Versions/A/CoreUtilsExtras"
 No reflection metadata in "/System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities"
 No reflection metadata in "/usr/lib/libTelephonyUtilDynamic.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom"
 No reflection metadata in "/usr/lib/libParallelCompression.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP"
 No reflection metadata in "/System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement"
 No reflection metadata in "/System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement"
 No reflection metadata in "/System/Library/Frameworks/Accounts.framework/Versions/A/Accounts"
 No reflection metadata in "/System/Library/PrivateFrameworks/C2.framework/Versions/A/C2"
 No reflection metadata in "/System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation"
 No reflection metadata in "/System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/Versions/A/CloudKitDistributedSync"
 No reflection metadata in "/System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage"
 No reflection metadata in "/System/Library/Frameworks/PushKit.framework/Versions/A/PushKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime"
 No reflection metadata in "/System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/RTCReporting.framework/Versions/A/RTCReporting"
 No reflection metadata in "/System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers"
 No reflection metadata in "/System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport"
 No reflection metadata in "/System/Library/PrivateFrameworks/AAAFoundation.framework/Versions/A/AAAFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle"
 No reflection metadata in "/System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit"
 No reflection metadata in "/System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording"
 No reflection metadata in "/usr/lib/libCoreStorage.dylib"
 No reflection metadata in "/usr/lib/libcsfde.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin"
 No reflection metadata in "/System/Library/PrivateFrameworks/OctagonTrust.framework/Versions/A/OctagonTrust"
 No reflection metadata in "/System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport"
 No reflection metadata in "/System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth"
 No reflection metadata in "/System/Library/PrivateFrameworks/GeoServicesCore.framework/Versions/A/GeoServicesCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers"
 No reflection metadata in "/System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery"
 No reflection metadata in "/System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/IntentsFoundation.framework/Versions/A/IntentsFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/FrontBoardServices.framework/Versions/A/FrontBoardServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/BackBoardServices.framework/Versions/A/BackBoardServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/InternationalTextSearch.framework/Versions/A/InternationalTextSearch"
 No reflection metadata in "/System/Library/PrivateFrameworks/StreamingZip.framework/Versions/A/StreamingZip"
 No reflection metadata in "/System/Library/Frameworks/MetalPerformanceShadersGraph.framework/Versions/A/MetalPerformanceShadersGraph"
 No reflection metadata in "/System/Library/PrivateFrameworks/ANECompiler.framework/Versions/A/ANECompiler"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleNeuralEngine.framework/Versions/A/AppleNeuralEngine"
 No reflection metadata in "/usr/lib/libncurses.5.4.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/ANEServices.framework/Versions/A/ANEServices"
 No reflection metadata in "/usr/lib/libsandbox.1.dylib"
 No reflection metadata in "/usr/lib/libMatch.1.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport"
 No reflection metadata in "/System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/AVFCapture.framework/Versions/A/AVFCapture"
 No reflection metadata in "/System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth"
 No reflection metadata in "/System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit"
 No reflection metadata in "/System/Library/PrivateFrameworks/AirPlaySync.framework/Versions/A/AirPlaySync"
 No reflection metadata in "/System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD"
 No reflection metadata in "/System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove"
 No reflection metadata in "/System/Library/PrivateFrameworks/AlgosScoreFramework.framework/Versions/A/AlgosScoreFramework"
 No reflection metadata in "/System/Library/PrivateFrameworks/CMPhoto.framework/Versions/A/CMPhoto"
 No reflection metadata in "/System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC"
 No reflection metadata in "/System/Library/PrivateFrameworks/CMImaging.framework/Versions/A/CMImaging"
 No reflection metadata in "/System/Library/PrivateFrameworks/Quagga.framework/Versions/A/Quagga"
 No reflection metadata in "/System/Library/PrivateFrameworks/CMCapture.framework/Versions/A/CMCapture"
 No reflection metadata in "/System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO"
 No reflection metadata in "/System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing"
 No reflection metadata in "/System/Library/PrivateFrameworks/IDS.framework/Versions/A/IDS"
 No reflection metadata in "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211"
 No reflection metadata in "/System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi"
 No reflection metadata in "/System/Library/PrivateFrameworks/IMFoundation.framework/Versions/A/IMFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/Marco.framework/Versions/A/Marco"
 No reflection metadata in "/System/Library/PrivateFrameworks/IDSFoundation.framework/Versions/A/IDSFoundation"
 No reflection metadata in "/System/Library/PrivateFrameworks/FTServices.framework/Versions/A/FTServices"
 No reflection metadata in "/System/Library/PrivateFrameworks/Engram.framework/Versions/A/Engram"
 No reflection metadata in "/usr/lib/libtidy.A.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/FTAWD.framework/Versions/A/FTAWD"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon"
 No reflection metadata in "/System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration"
 No reflection metadata in "/System/Library/Frameworks/WebKit.framework/Versions/A/WebKit"
 No reflection metadata in "/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print"
 No reflection metadata in "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI"
 No reflection metadata in "/System/Library/PrivateFrameworks/login.framework/Versions/A/login"
 No reflection metadata in "/System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService"
 No reflection metadata in "/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages"
 No reflection metadata in "/System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore"
 No reflection metadata in "/usr/lib/libodfde.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport"
 No reflection metadata in "/usr/lib/libcurl.4.dylib"
 No reflection metadata in "/usr/lib/libcrypto.46.dylib"
 No reflection metadata in "/usr/lib/libssl.48.dylib"
 No reflection metadata in "/System/Library/Frameworks/LDAP.framework/Versions/A/LDAP"
 No reflection metadata in "/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent"
 No reflection metadata in "/usr/lib/libsasl2.2.dylib"
 No reflection metadata in "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy"
 No reflection metadata in "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore"
 No reflection metadata in "/System/Library/PrivateFrameworks/CorePrediction.framework/Versions/A/CorePrediction"
 No reflection metadata in "/usr/lib/libnetworkextension.dylib"
 No reflection metadata in "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/Frameworks/libwebrtc.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/SafariSafeBrowsing.framework/Versions/A/SafariSafeBrowsing"
 No reflection metadata in "/System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface"
 No reflection metadata in "/System/Library/PrivateFrameworks/URLFormatting.framework/Versions/A/URLFormatting"
 No reflection metadata in "/System/Library/PrivateFrameworks/WebInspectorUI.framework/Versions/A/WebInspectorUI"
 No reflection metadata in "/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore"
 No reflection metadata in "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/Frameworks/libANGLE-shared.dylib"
 No reflection metadata in "/System/Library/Frameworks/NetworkExtension.framework/Versions/A/NetworkExtension"
 No reflection metadata in "/System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/CaptiveNetwork.framework/Versions/A/CaptiveNetwork"
 No reflection metadata in "/System/Library/PrivateFrameworks/EAP8021X.framework/Versions/A/EAP8021X"
 No reflection metadata in "/System/Library/Frameworks/ModelIO.framework/Versions/A/ModelIO"
 No reflection metadata in "/System/Library/Frameworks/MetalKit.framework/Versions/A/MetalKit"
 No reflection metadata in "/System/Library/Frameworks/GLKit.framework/Versions/A/GLKit"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreOptimization.framework/Versions/A/CoreOptimization"
 No reflection metadata in "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/WirelessDiagnostics"
 No reflection metadata in "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupportFramework.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupport.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libprotobuf-lite.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libprotobuf.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal"
 No reflection metadata in "/System/Library/Frameworks/FileProvider.framework/Versions/A/FileProvider"
 No reflection metadata in "/System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage"
 No reflection metadata in "/System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter"
 No reflection metadata in "/System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv"
 No reflection metadata in "/System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth"
 No reflection metadata in "/usr/lib/libcmark-gfm.dylib"
 No reflection metadata in "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib"
 No reflection metadata in "/System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge"
 No reflection metadata in "/usr/lib/libobjc-trampolines.dylib"
 TypeSystemSwiftTypeRef(ForExpressions)TypeSystemSwiftTypeRef()
 SwiftASTContextForExpressions::CreateInstance(Target)
 TypeSystemSwiftTypeRef("dyld")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("liboah.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libc++.1.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libobjc.A.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("dyld")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("libc++abi.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libSystem.B.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libcache.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libcommonCrypto.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("liboah.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libc++.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libobjc.A.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("liboah.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("liboah.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("liboah.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcache.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcommonCrypto.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libc++abi.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcache.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcache.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcache.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libobjc.A.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libobjc.A.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libobjc.A.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcommonCrypto.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcommonCrypto.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcommonCrypto.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libc++abi.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libc++abi.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libc++abi.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libc++.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libc++.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libc++.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("dyld")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("dyld")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("dyld")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSystem.B.dylib")::CreateInstance(Module)
 SwiftASTContext::GetResourceDir() -- trying toolchain path: 
 SwiftASTContext::GetResourceDir() -- trying Xcode path: /Applications/Xcode.app/Contents
 SwiftASTContext::GetResourceDir() -- trying Xcode-based lib path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContextForModule("libSystem.B.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libSystem.B.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libSystem.B.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContext::GetResourceDir() -- found Swift resource dir via Xcode contents path + default toolchain relative dir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContextForModule("liboah.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcommonCrypto.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("dyld")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libSystem.B.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libc++abi.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libobjc.A.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcache.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libc++.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcache.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("dyld")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcache.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcache.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcache.dylib")::RegisterSectionModules("libcache.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libobjc.A.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("dyld")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("dyld")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("dyld")::RegisterSectionModules("dyld") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libobjc.A.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libobjc.A.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libobjc.A.dylib")::RegisterSectionModules("libobjc.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcommonCrypto.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcommonCrypto.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcommonCrypto.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcommonCrypto.dylib")::RegisterSectionModules("libcommonCrypto.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libSystem.B.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("liboah.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libSystem.B.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libSystem.B.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("liboah.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("liboah.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("liboah.dylib")::RegisterSectionModules("liboah.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libSystem.B.dylib")::RegisterSectionModules("libSystem.B.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libc++abi.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libc++abi.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libc++abi.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libc++abi.dylib")::RegisterSectionModules("libc++abi.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libc++.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libc++.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libc++.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libc++.1.dylib")::RegisterSectionModules("libc++.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcompiler_rt.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcompiler_rt.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcompiler_rt.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcompiler_rt.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcompiler_rt.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcompiler_rt.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libcopyfile.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcopyfile.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcopyfile.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcopyfile.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcopyfile.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libcorecrypto.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcorecrypto.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcorecrypto.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcorecrypto.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcorecrypto.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcopyfile.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcorecrypto.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libdispatch.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libdispatch.dylib")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("libdyld.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libdispatch.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libdispatch.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libdyld.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libdyld.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libdyld.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libdyld.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libdispatch.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libdyld.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libkeymgr.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libkeymgr.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libdispatch.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libkeymgr.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libkeymgr.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libkeymgr.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libkeymgr.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libmacho.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libmacho.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libmacho.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libmacho.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libmacho.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libmacho.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libquarantine.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libquarantine.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libquarantine.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libquarantine.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libquarantine.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libquarantine.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcompiler_rt.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libdyld.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcompiler_rt.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcompiler_rt.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcompiler_rt.dylib")::RegisterSectionModules("libcompiler_rt.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libkeymgr.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libdyld.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libdyld.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libdyld.dylib")::RegisterSectionModules("libdyld.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libkeymgr.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libkeymgr.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libkeymgr.dylib")::RegisterSectionModules("libkeymgr.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcorecrypto.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libmacho.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libmacho.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libmacho.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcorecrypto.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcorecrypto.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcorecrypto.dylib")::RegisterSectionModules("libcorecrypto.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libmacho.dylib")::RegisterSectionModules("libmacho.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libremovefile.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libremovefile.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libremovefile.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libremovefile.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libremovefile.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcopyfile.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libremovefile.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_asl.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libdispatch.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_asl.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_asl.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_asl.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_asl.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcopyfile.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcopyfile.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcopyfile.dylib")::RegisterSectionModules("libcopyfile.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libdispatch.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libdispatch.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_asl.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libdispatch.dylib")::RegisterSectionModules("libdispatch.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_blocks.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_blocks.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_blocks.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_blocks.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_blocks.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libsystem_c.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_c.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_c.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_c.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_c.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_blocks.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_collections.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_collections.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_collections.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_collections.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_collections.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_c.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_collections.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_configuration.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_configuration.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_configuration.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_configuration.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_configuration.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_configuration.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libquarantine.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libquarantine.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libquarantine.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libquarantine.dylib")::RegisterSectionModules("libquarantine.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_containermanager.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_containermanager.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_containermanager.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_containermanager.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_containermanager.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_containermanager.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_coreservices.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_coreservices.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_coreservices.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_coreservices.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_coreservices.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_coreservices.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libremovefile.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_asl.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libremovefile.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libremovefile.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_asl.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_asl.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libremovefile.dylib")::RegisterSectionModules("libremovefile.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_asl.dylib")::RegisterSectionModules("libsystem_asl.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_darwin.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_darwin.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_darwin.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_darwin.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_darwin.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_darwin.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_dnssd.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_dnssd.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_dnssd.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_dnssd.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_dnssd.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_dnssd.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_c.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_c.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_c.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_c.dylib")::RegisterSectionModules("libsystem_c.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_configuration.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_configuration.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_configuration.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_configuration.dylib")::RegisterSectionModules("libsystem_configuration.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_collections.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_collections.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_collections.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_collections.dylib")::RegisterSectionModules("libsystem_collections.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_featureflags.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_featureflags.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_featureflags.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_featureflags.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_featureflags.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_featureflags.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_info.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_blocks.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_info.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_info.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_info.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_info.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_blocks.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_blocks.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_blocks.dylib")::RegisterSectionModules("libsystem_blocks.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_info.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_coreservices.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_coreservices.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_coreservices.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_coreservices.dylib")::RegisterSectionModules("libsystem_coreservices.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_m.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_m.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_m.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_m.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_m.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_m.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_malloc.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_malloc.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_malloc.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_malloc.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_malloc.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_malloc.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_networkextension.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_networkextension.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_networkextension.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_networkextension.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_networkextension.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_networkextension.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_containermanager.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_containermanager.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_containermanager.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_containermanager.dylib")::RegisterSectionModules("libsystem_containermanager.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_dnssd.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_dnssd.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_dnssd.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_dnssd.dylib")::RegisterSectionModules("libsystem_dnssd.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_notify.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_notify.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_notify.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_notify.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_notify.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_notify.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_product_info_filter.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_darwin.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_darwin.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_darwin.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_darwin.dylib")::RegisterSectionModules("libsystem_darwin.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_sandbox.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_sandbox.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_sandbox.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_sandbox.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_sandbox.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_sandbox.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_featureflags.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_featureflags.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_featureflags.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_featureflags.dylib")::RegisterSectionModules("libsystem_featureflags.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_malloc.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_malloc.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_malloc.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_malloc.dylib")::RegisterSectionModules("libsystem_malloc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_networkextension.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_networkextension.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_networkextension.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_networkextension.dylib")::RegisterSectionModules("libsystem_networkextension.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_info.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_info.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_info.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_info.dylib")::RegisterSectionModules("libsystem_info.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_secinit.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_secinit.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_secinit.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_secinit.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_secinit.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_secinit.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_kernel.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_kernel.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_kernel.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_kernel.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_kernel.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_kernel.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_platform.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_platform.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_platform.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_platform.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_platform.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_platform.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_m.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_m.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_m.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_m.dylib")::RegisterSectionModules("libsystem_m.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_pthread.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_pthread.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_pthread.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_pthread.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_pthread.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_pthread.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_notify.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_notify.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_notify.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_notify.dylib")::RegisterSectionModules("libsystem_notify.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsystem_symptoms.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_symptoms.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_symptoms.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_symptoms.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_symptoms.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_symptoms.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsystem_trace.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsystem_trace.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsystem_trace.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsystem_trace.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsystem_trace.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_trace.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_product_info_filter.dylib")::RegisterSectionModules("libsystem_product_info_filter.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_secinit.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_secinit.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_secinit.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_secinit.dylib")::RegisterSectionModules("libsystem_secinit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libunwind.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libunwind.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libunwind.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libunwind.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libunwind.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libunwind.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_platform.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_platform.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_platform.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_platform.dylib")::RegisterSectionModules("libsystem_platform.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libxpc.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libxpc.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libxpc.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libxpc.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libxpc.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_pthread.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_pthread.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_pthread.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_pthread.dylib")::RegisterSectionModules("libsystem_pthread.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsystem_sandbox.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxpc.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_sandbox.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_sandbox.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_sandbox.dylib")::RegisterSectionModules("libsystem_sandbox.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AppKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppKit")::CreateInstance(Module)
 SwiftASTContextForModule("AppKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("UIFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("UIFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("UIFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("UIFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("UIFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsystem_kernel.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UIFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_kernel.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_kernel.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_kernel.dylib")::RegisterSectionModules("libsystem_kernel.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("RemoteViewServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("RemoteViewServices")::CreateInstance(Module)
 SwiftASTContextForModule("RemoteViewServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RemoteViewServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RemoteViewServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RemoteViewServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_trace.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_trace.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_trace.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_trace.dylib")::RegisterSectionModules("libsystem_trace.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("XCTTargetBootstrap")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("XCTTargetBootstrap")::CreateInstance(Module)
 SwiftASTContextForModule("XCTTargetBootstrap")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("XCTTargetBootstrap")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("XCTTargetBootstrap")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("XCTTargetBootstrap")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("InternationalSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("InternationalSupport")::CreateInstance(Module)
 SwiftASTContextForModule("InternationalSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("InternationalSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("InternationalSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("InternationalSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsystem_symptoms.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsystem_symptoms.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsystem_symptoms.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsystem_symptoms.dylib")::RegisterSectionModules("libsystem_symptoms.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("UserActivity")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("UserActivity")::CreateInstance(Module)
 SwiftASTContextForModule("UserActivity")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("UserActivity")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("UserActivity")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("UserActivity")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("UIFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UIFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("UIFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("UIFoundation")::RegisterSectionModules("UIFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libspindump.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libspindump.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libspindump.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libspindump.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libspindump.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libspindump.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("RemoteViewServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("RemoteViewServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RemoteViewServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RemoteViewServices")::RegisterSectionModules("RemoteViewServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libxpc.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxpc.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libxpc.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libxpc.dylib")::RegisterSectionModules("libxpc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("UniformTypeIdentifiers")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("UniformTypeIdentifiers")::CreateInstance(Module)
 SwiftASTContextForModule("UniformTypeIdentifiers")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("UniformTypeIdentifiers")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("UniformTypeIdentifiers")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("XCTTargetBootstrap")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UniformTypeIdentifiers")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libapp_launch_measurement.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("XCTTargetBootstrap")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("XCTTargetBootstrap")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("XCTTargetBootstrap")::RegisterSectionModules("XCTTargetBootstrap") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libunwind.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libunwind.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libunwind.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("CoreAnalytics")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libunwind.dylib")::RegisterSectionModules("libunwind.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreAnalytics")::CreateInstance(Module)
 SwiftASTContextForModule("CoreAnalytics")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreAnalytics")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreAnalytics")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAnalytics")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("UserActivity")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UserActivity")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("UserActivity")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("UserActivity")::RegisterSectionModules("UserActivity") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreAutoLayout")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreAutoLayout")::CreateInstance(Module)
 SwiftASTContextForModule("CoreAutoLayout")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreAutoLayout")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreAutoLayout")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAutoLayout")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppKit")::RegisterSectionModules("AppKit") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreData")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreData")::CreateInstance(Module)
 SwiftASTContextForModule("CoreData")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreData")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreData")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("Metal")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Metal")::CreateInstance(Module)
 SwiftASTContextForModule("Metal")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Metal")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Metal")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreData")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Metal")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("InternationalSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("InternationalSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("InternationalSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("InternationalSupport")::RegisterSectionModules("InternationalSupport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("liblangid.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("liblangid.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("liblangid.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("liblangid.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("liblangid.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("liblangid.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("UniformTypeIdentifiers")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UniformTypeIdentifiers")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("UniformTypeIdentifiers")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("UniformTypeIdentifiers")::RegisterSectionModules("UniformTypeIdentifiers") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreSVG")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreSVG")::CreateInstance(Module)
 SwiftASTContextForModule("CoreSVG")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreSVG")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreSVG")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAutoLayout")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreSVG")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreAutoLayout")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreAutoLayout")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreAutoLayout")::RegisterSectionModules("CoreAutoLayout") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libspindump.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libspindump.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libspindump.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libspindump.dylib")::RegisterSectionModules("libspindump.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreAnalytics")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreAnalytics")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreAnalytics")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Metal")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreAnalytics")::RegisterSectionModules("CoreAnalytics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Metal")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Metal")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Metal")::RegisterSectionModules("Metal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("SkyLight")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SkyLight")::CreateInstance(Module)
 SwiftASTContextForModule("SkyLight")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SkyLight")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SkyLight")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libapp_launch_measurement.dylib")::RegisterSectionModules("libapp_launch_measurement.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SkyLight")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreGraphics")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreGraphics")::CreateInstance(Module)
 SwiftASTContextForModule("CoreGraphics")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreGraphics")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreGraphics")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreGraphics")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Accelerate")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Accelerate")::CreateInstance(Module)
 SwiftASTContextForModule("Accelerate")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Accelerate")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("IconServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IconServices")::CreateInstance(Module)
 SwiftASTContextForModule("IconServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IconServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IconServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IconServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("IOSurface")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("liblangid.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOSurface")::CreateInstance(Module)
 SwiftASTContextForModule("IOSurface")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOSurface")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOSurface")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOSurface")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreData")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreData")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreData")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreData")::RegisterSectionModules("CoreData") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("liblangid.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("liblangid.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("liblangid.dylib")::RegisterSectionModules("liblangid.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libDiagnosticMessagesClient.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libz.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libz.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libz.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libz.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libz.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libz.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Accelerate")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Accelerate")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Accelerate")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Accelerate")::RegisterSectionModules("Accelerate") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreSVG")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreSVG")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreSVG")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("ApplicationServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreSVG")::RegisterSectionModules("CoreSVG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ApplicationServices")::CreateInstance(Module)
 SwiftASTContextForModule("ApplicationServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ApplicationServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ApplicationServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ApplicationServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SkyLight")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("DFRFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SkyLight")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SkyLight")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SkyLight")::RegisterSectionModules("SkyLight") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DFRFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("DFRFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DFRFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DFRFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DFRFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreGraphics")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreGraphics")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreGraphics")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreGraphics")::RegisterSectionModules("CoreGraphics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libDiagnosticMessagesClient.dylib")::RegisterSectionModules("libDiagnosticMessagesClient.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libicucore.A.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libicucore.A.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libicucore.A.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libicucore.A.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libicucore.A.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libicucore.A.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IconServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IconServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IconServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IconServices")::RegisterSectionModules("IconServices") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AudioToolbox")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AudioToolbox")::CreateInstance(Module)
 SwiftASTContextForModule("AudioToolbox")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AudioToolbox")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AudioToolbox")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("DataDetectorsCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DataDetectorsCore")::CreateInstance(Module)
 SwiftASTContextForModule("DataDetectorsCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DataDetectorsCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DataDetectorsCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AudioToolbox")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("DataDetectorsCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libz.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOSurface")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libz.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libz.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libz.1.dylib")::RegisterSectionModules("libz.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("TextInput")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("TextInput")::CreateInstance(Module)
 SwiftASTContextForModule("TextInput")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("TextInput")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("TextInput")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("TextInput")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IOSurface")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOSurface")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOSurface")::RegisterSectionModules("IOSurface") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Foundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Foundation")::CreateInstance(Module)
 SwiftASTContextForModule("Foundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Foundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Foundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Foundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libMobileGestalt.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libMobileGestalt.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libMobileGestalt.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libMobileGestalt.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libMobileGestalt.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libMobileGestalt.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("ApplicationServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ApplicationServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ApplicationServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ApplicationServices")::RegisterSectionModules("ApplicationServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DFRFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DFRFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DFRFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DFRFoundation")::RegisterSectionModules("DFRFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("HIToolbox")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("HIToolbox")::CreateInstance(Module)
 SwiftASTContextForModule("HIToolbox")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("HIToolbox")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("HIToolbox")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("HIToolbox")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("QuartzCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("QuartzCore")::CreateInstance(Module)
 SwiftASTContextForModule("QuartzCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("QuartzCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("QuartzCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AudioToolbox")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("QuartzCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AudioToolbox")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AudioToolbox")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AudioToolbox")::RegisterSectionModules("AudioToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Security")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Security")::CreateInstance(Module)
 SwiftASTContextForModule("Security")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Security")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Security")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DataDetectorsCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DataDetectorsCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DataDetectorsCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DataDetectorsCore")::RegisterSectionModules("DataDetectorsCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Security")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libicucore.A.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libicucore.A.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libicucore.A.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libicucore.A.dylib")::RegisterSectionModules("libicucore.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SpeechRecognition")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SpeechRecognition")::CreateInstance(Module)
 SwiftASTContextForModule("SpeechRecognition")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SpeechRecognition")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SpeechRecognition")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("TextInput")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SpeechRecognition")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("TextInput")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("TextInput")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("TextInput")::RegisterSectionModules("TextInput") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreUI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreUI")::CreateInstance(Module)
 SwiftASTContextForModule("CoreUI")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreUI")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreUI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libMobileGestalt.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Foundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libMobileGestalt.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libMobileGestalt.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libMobileGestalt.dylib")::RegisterSectionModules("libMobileGestalt.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Foundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Foundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreUI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Foundation")::RegisterSectionModules("Foundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreAudio")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreAudio")::CreateInstance(Module)
 SwiftASTContextForModule("CoreAudio")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreAudio")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreAudio")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAudio")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DiskArbitration")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DiskArbitration")::CreateInstance(Module)
 SwiftASTContextForModule("DiskArbitration")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DiskArbitration")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DiskArbitration")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DiskArbitration")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MultitouchSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MultitouchSupport")::CreateInstance(Module)
 SwiftASTContextForModule("MultitouchSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MultitouchSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MultitouchSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MultitouchSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("QuartzCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("QuartzCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("QuartzCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("QuartzCore")::RegisterSectionModules("QuartzCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libenergytrace.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libenergytrace.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libenergytrace.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libenergytrace.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libenergytrace.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libenergytrace.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Security")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Security")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Security")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Security")::RegisterSectionModules("Security") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("HIToolbox")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SpeechRecognition")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("HIToolbox")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("HIToolbox")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("HIToolbox")::RegisterSectionModules("HIToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SpeechRecognition")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SpeechRecognition")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SpeechRecognition")::RegisterSectionModules("SpeechRecognition") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IOKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IOKit")::CreateInstance(Module)
 SwiftASTContextForModule("IOKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("CoreServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreServices")::CreateInstance(Module)
 SwiftASTContextForModule("CoreServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("PerformanceAnalysis")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PerformanceAnalysis")::CreateInstance(Module)
 SwiftASTContextForModule("PerformanceAnalysis")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PerformanceAnalysis")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PerformanceAnalysis")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreUI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PerformanceAnalysis")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreUI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreUI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreUI")::RegisterSectionModules("CoreUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreAudio")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreAudio")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreAudio")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreAudio")::RegisterSectionModules("CoreAudio") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MultitouchSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DiskArbitration")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MultitouchSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MultitouchSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiskArbitration")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DiskArbitration")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiskArbitration")::RegisterSectionModules("DiskArbitration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MultitouchSupport")::RegisterSectionModules("MultitouchSupport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("OpenGL")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OpenGL")::CreateInstance(Module)
 SwiftASTContextForModule("OpenGL")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OpenGL")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OpenGL")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OpenGL")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MobileKeyBag")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MobileKeyBag")::CreateInstance(Module)
 SwiftASTContextForModule("MobileKeyBag")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MobileKeyBag")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MobileKeyBag")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MobileKeyBag")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ColorSync")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ColorSync")::CreateInstance(Module)
 SwiftASTContextForModule("ColorSync")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ColorSync")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ColorSync")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ColorSync")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("CoreFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libenergytrace.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libenergytrace.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libenergytrace.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libenergytrace.dylib")::RegisterSectionModules("libenergytrace.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreImage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreImage")::CreateInstance(Module)
 SwiftASTContextForModule("CoreImage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreImage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreImage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreImage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreServices")::RegisterSectionModules("CoreServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOKit")::RegisterSectionModules("IOKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("PerformanceAnalysis")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PerformanceAnalysis")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PerformanceAnalysis")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PerformanceAnalysis")::RegisterSectionModules("PerformanceAnalysis") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreText")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreText")::CreateInstance(Module)
 SwiftASTContextForModule("CoreText")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreText")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreText")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreText")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ImageIO")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ImageIO")::CreateInstance(Module)
 SwiftASTContextForModule("ImageIO")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ImageIO")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ImageIO")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("SoftLinking")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SoftLinking")::CreateInstance(Module)
 SwiftASTContextForModule("SoftLinking")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SoftLinking")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SoftLinking")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ImageIO")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SoftLinking")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OpenGL")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OpenGL")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OpenGL")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OpenGL")::RegisterSectionModules("OpenGL") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ColorSync")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ColorSync")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ColorSync")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ColorSync")::RegisterSectionModules("ColorSync") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreFoundation")::RegisterSectionModules("CoreFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libxml2.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libxml2.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libxml2.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libxml2.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libxml2.2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libxml2.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MobileKeyBag")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MobileKeyBag")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MobileKeyBag")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MobileKeyBag")::RegisterSectionModules("MobileKeyBag") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcompression.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcompression.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcompression.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcompression.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcompression.dylib")::SetTriple("x86_64-apple-macosx10.11.0") setting to "x86_64-apple-macosx10.11.0"
 SwiftASTContextForModule("libcompression.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("TextureIO")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("TextureIO")::CreateInstance(Module)
 SwiftASTContextForModule("TextureIO")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("TextureIO")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("TextureIO")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("TextureIO")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libate.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libate.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libate.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libate.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libate.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libate.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreImage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreImage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreImage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreImage")::RegisterSectionModules("CoreImage") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("liblzma.5.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("liblzma.5.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("liblzma.5.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("liblzma.5.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("liblzma.5.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("liblzma.5.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SoftLinking")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SoftLinking")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SoftLinking")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SoftLinking")::RegisterSectionModules("SoftLinking") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ImageIO")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ImageIO")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ImageIO")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ImageIO")::RegisterSectionModules("ImageIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreText")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreText")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreText")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreText")::RegisterSectionModules("CoreText") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SystemConfiguration")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SystemConfiguration")::CreateInstance(Module)
 SwiftASTContextForModule("SystemConfiguration")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SystemConfiguration")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SystemConfiguration")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SystemConfiguration")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libfakelink.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libfakelink.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libfakelink.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libfakelink.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libfakelink.dylib")::SetTriple("x86_64-apple-macosx10.14.0") setting to "x86_64-apple-macosx10.14.0"
 SwiftASTContextForModule("libfakelink.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libxml2.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxml2.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libxml2.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libxml2.2.dylib")::RegisterSectionModules("libxml2.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CFNetwork")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CFNetwork")::CreateInstance(Module)
 SwiftASTContextForModule("CFNetwork")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CFNetwork")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CFNetwork")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CFNetwork")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libarchive.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libarchive.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libarchive.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libarchive.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libarchive.2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcompression.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcompression.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcompression.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcompression.dylib")::RegisterSectionModules("libcompression.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libarchive.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("TextureIO")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("TextureIO")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("TextureIO")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libate.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("TextureIO")::RegisterSectionModules("TextureIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libate.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libate.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libate.dylib")::RegisterSectionModules("libate.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AppleSystemInfo")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleSystemInfo")::CreateInstance(Module)
 SwiftASTContextForModule("AppleSystemInfo")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleSystemInfo")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleSystemInfo")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppleSystemInfo")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libbsm.0.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libbsm.0.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libbsm.0.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libbsm.0.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libbsm.0.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libbsm.0.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libnetwork.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libnetwork.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libnetwork.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libnetwork.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libnetwork.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libnetwork.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("liblzma.5.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("liblzma.5.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("liblzma.5.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("liblzma.5.dylib")::RegisterSectionModules("liblzma.5.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libkxld.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libkxld.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libkxld.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libkxld.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libkxld.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libkxld.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SystemConfiguration")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CFNetwork")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libfakelink.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SystemConfiguration")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SystemConfiguration")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libfakelink.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libfakelink.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SystemConfiguration")::RegisterSectionModules("SystemConfiguration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CFNetwork")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CFNetwork")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libfakelink.dylib")::RegisterSectionModules("libfakelink.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CFNetwork")::RegisterSectionModules("CFNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IOMobileFramebuffer")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IOMobileFramebuffer")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("libCoreEntitlements.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCoreEntitlements.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("IOMobileFramebuffer")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOMobileFramebuffer")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOMobileFramebuffer")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCoreEntitlements.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCoreEntitlements.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCoreEntitlements.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOMobileFramebuffer")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AppleFSCompression")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCoreEntitlements.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleFSCompression")::CreateInstance(Module)
 SwiftASTContextForModule("AppleFSCompression")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleFSCompression")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleFSCompression")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppleFSCompression")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libarchive.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libarchive.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libarchive.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libarchive.2.dylib")::RegisterSectionModules("libarchive.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleSystemInfo")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleSystemInfo")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleSystemInfo")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleSystemInfo")::RegisterSectionModules("AppleSystemInfo") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libbsm.0.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libbsm.0.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libbsm.0.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libbsm.0.dylib")::RegisterSectionModules("libbsm.0.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libnetwork.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libnetwork.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libnetwork.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libnetwork.dylib")::RegisterSectionModules("libnetwork.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcoretls.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcoretls.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcoretls.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcoretls.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcoretls.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libcoretls_cfhelpers.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcoretls.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libpam.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libpam.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libpam.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libpam.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libpam.2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libpam.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libsqlite3.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsqlite3.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsqlite3.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsqlite3.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsqlite3.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsqlite3.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libkxld.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libkxld.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libkxld.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libkxld.dylib")::RegisterSectionModules("libkxld.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libxar.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libxar.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libxar.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libxar.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libxar.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libxar.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libCoreEntitlements.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCoreEntitlements.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCoreEntitlements.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCoreEntitlements.dylib")::RegisterSectionModules("libCoreEntitlements.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOMobileFramebuffer")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleFSCompression")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOMobileFramebuffer")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOMobileFramebuffer")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleFSCompression")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleFSCompression")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOMobileFramebuffer")::RegisterSectionModules("IOMobileFramebuffer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleFSCompression")::RegisterSectionModules("AppleFSCompression") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libbz2.1.0.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libbz2.1.0.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libbz2.1.0.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libbz2.1.0.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libbz2.1.0.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libpcap.A.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libbz2.1.0.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libpcap.A.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libpcap.A.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libpcap.A.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libpcap.A.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcoretls.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libpcap.A.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcoretls.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcoretls.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("libdns_services.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcoretls.dylib")::RegisterSectionModules("libcoretls.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libdns_services.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libdns_services.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libdns_services.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libdns_services.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libpam.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libdns_services.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libpam.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libpam.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libpam.2.dylib")::RegisterSectionModules("libpam.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcoretls_cfhelpers.dylib")::RegisterSectionModules("libcoretls_cfhelpers.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libapple_nghttp2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libapple_nghttp2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libapple_nghttp2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libapple_nghttp2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libapple_nghttp2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libapple_nghttp2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libiconv.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libiconv.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libiconv.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libiconv.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libiconv.2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libiconv.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsqlite3.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsqlite3.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsqlite3.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsqlite3.dylib")::RegisterSectionModules("libsqlite3.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcharset.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcharset.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcharset.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcharset.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcharset.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcharset.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("FSEvents")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FSEvents")::CreateInstance(Module)
 SwiftASTContextForModule("FSEvents")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FSEvents")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FSEvents")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("FSEvents")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libxar.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxar.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libxar.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libxar.1.dylib")::RegisterSectionModules("libxar.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CarbonCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CarbonCore")::CreateInstance(Module)
 SwiftASTContextForModule("CarbonCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CarbonCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CarbonCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CarbonCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libbz2.1.0.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libbz2.1.0.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libbz2.1.0.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libbz2.1.0.dylib")::RegisterSectionModules("libbz2.1.0.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libdns_services.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libdns_services.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libdns_services.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libpcap.A.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libdns_services.dylib")::RegisterSectionModules("libdns_services.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libpcap.A.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libpcap.A.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libpcap.A.dylib")::RegisterSectionModules("libpcap.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Metadata")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Metadata")::CreateInstance(Module)
 SwiftASTContextForModule("Metadata")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Metadata")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Metadata")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Metadata")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("OSServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OSServices")::CreateInstance(Module)
 SwiftASTContextForModule("OSServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OSServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OSServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OSServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libiconv.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libiconv.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libiconv.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libiconv.2.dylib")::RegisterSectionModules("libiconv.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcharset.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcharset.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcharset.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcharset.1.dylib")::RegisterSectionModules("libcharset.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libapple_nghttp2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libapple_nghttp2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libapple_nghttp2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libapple_nghttp2.dylib")::RegisterSectionModules("libapple_nghttp2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SearchKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SearchKit")::CreateInstance(Module)
 SwiftASTContextForModule("SearchKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SearchKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SearchKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SearchKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("FSEvents")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FSEvents")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FSEvents")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FSEvents")::RegisterSectionModules("FSEvents") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AE")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AE")::CreateInstance(Module)
 SwiftASTContextForModule("AE")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AE")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AE")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AE")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("LaunchServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LaunchServices")::CreateInstance(Module)
 SwiftASTContextForModule("LaunchServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LaunchServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LaunchServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LaunchServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DictionaryServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DictionaryServices")::CreateInstance(Module)
 SwiftASTContextForModule("DictionaryServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DictionaryServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DictionaryServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DictionaryServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("SharedFileList")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SharedFileList")::CreateInstance(Module)
 SwiftASTContextForModule("SharedFileList")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SharedFileList")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SharedFileList")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SharedFileList")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CarbonCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CarbonCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CarbonCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CarbonCore")::RegisterSectionModules("CarbonCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libCheckFix.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCheckFix.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCheckFix.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCheckFix.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCheckFix.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCheckFix.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OSServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OSServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OSServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OSServices")::RegisterSectionModules("OSServices") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("TCC")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LaunchServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("LaunchServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LaunchServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("LaunchServices")::RegisterSectionModules("LaunchServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("TCC")::CreateInstance(Module)
 SwiftASTContextForModule("TCC")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("TCC")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("TCC")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AE")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("TCC")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AE")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AE")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AE")::RegisterSectionModules("AE") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Metadata")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Metadata")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Metadata")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Metadata")::RegisterSectionModules("Metadata") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SearchKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SharedFileList")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DictionaryServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SearchKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SearchKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SearchKit")::RegisterSectionModules("SearchKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SharedFileList")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SharedFileList")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SharedFileList")::RegisterSectionModules("SharedFileList") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DictionaryServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DictionaryServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DictionaryServices")::RegisterSectionModules("DictionaryServices") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreNLP")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreNLP")::CreateInstance(Module)
 SwiftASTContextForModule("CoreNLP")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreNLP")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreNLP")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreNLP")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MetadataUtilities")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MetadataUtilities")::CreateInstance(Module)
 SwiftASTContextForModule("MetadataUtilities")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MetadataUtilities")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MetadataUtilities")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MetadataUtilities")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libmecabra.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libmecabra.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libmecabra.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libmecabra.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libmecabra.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libmecabra.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libmecab.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libmecab.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libmecab.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libmecab.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libmecab.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libCRFSuite.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCRFSuite.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libmecab.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libCRFSuite.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCRFSuite.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCRFSuite.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCRFSuite.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libgermantok.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libgermantok.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libgermantok.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libgermantok.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libgermantok.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libgermantok.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libCheckFix.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCheckFix.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCheckFix.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCheckFix.dylib")::RegisterSectionModules("libCheckFix.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libThaiTokenizer.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libThaiTokenizer.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libThaiTokenizer.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libThaiTokenizer.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libThaiTokenizer.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libThaiTokenizer.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("TCC")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("TCC")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("TCC")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("TCC")::RegisterSectionModules("TCC") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreNLP")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MetadataUtilities")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreNLP")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreNLP")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreNLP")::RegisterSectionModules("CoreNLP") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MetadataUtilities")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MetadataUtilities")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MetadataUtilities")::RegisterSectionModules("MetadataUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libCRFSuite.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libmecab.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCRFSuite.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCRFSuite.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("vImage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCRFSuite.dylib")::RegisterSectionModules("libCRFSuite.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("vImage")::CreateInstance(Module)
 SwiftASTContextForModule("libmecab.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libmecab.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libmecab.dylib")::RegisterSectionModules("libmecab.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("vImage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("vImage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("vImage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libmecabra.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("vecLib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("vecLib")::CreateInstance(Module)
 SwiftASTContextForModule("vecLib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("vImage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libmecabra.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libmecabra.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libmecabra.dylib")::RegisterSectionModules("libmecabra.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libvMisc.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libvMisc.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libvMisc.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libvMisc.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libvMisc.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libvMisc.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("vecLib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libvDSP.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libvDSP.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libvDSP.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libvDSP.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libvDSP.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libBLAS.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libBLAS.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libvDSP.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libBLAS.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libBLAS.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libBLAS.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libBLAS.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libLAPACK.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libLAPACK.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libLAPACK.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libLAPACK.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libLAPACK.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libLAPACK.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libgermantok.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libgermantok.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libgermantok.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libgermantok.dylib")::RegisterSectionModules("libgermantok.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libLinearAlgebra.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libLinearAlgebra.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libLinearAlgebra.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libLinearAlgebra.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libLinearAlgebra.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libLinearAlgebra.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libThaiTokenizer.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libThaiTokenizer.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libThaiTokenizer.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libThaiTokenizer.dylib")::RegisterSectionModules("libThaiTokenizer.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libvMisc.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("vImage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libvMisc.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libvMisc.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libvMisc.dylib")::RegisterSectionModules("libvMisc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("vImage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("vImage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("vImage")::RegisterSectionModules("vImage") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libSparseBLAS.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libSparseBLAS.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libSparseBLAS.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libSparseBLAS.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libSparseBLAS.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSparseBLAS.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libQuadrature.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libQuadrature.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libQuadrature.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libQuadrature.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libQuadrature.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libBNNS.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libBNNS.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libBNNS.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libBNNS.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libBNNS.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libQuadrature.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libBNNS.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libBLAS.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libBLAS.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libBLAS.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libBLAS.dylib")::RegisterSectionModules("libBLAS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libvDSP.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("vecLib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libvDSP.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libvDSP.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("vecLib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("vecLib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("vecLib")::RegisterSectionModules("vecLib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libLAPACK.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libvDSP.dylib")::RegisterSectionModules("libvDSP.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libLAPACK.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libLAPACK.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libLAPACK.dylib")::RegisterSectionModules("libLAPACK.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libSparse.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libSparse.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libSparse.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libSparse.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libSparse.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSparse.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("LinguisticData")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LinguisticData")::CreateInstance(Module)
 SwiftASTContextForModule("LinguisticData")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LinguisticData")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LinguisticData")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("Lexicon")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libLinearAlgebra.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("LinguisticData")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Lexicon")::CreateInstance(Module)
 SwiftASTContextForModule("Lexicon")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Lexicon")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Lexicon")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libChineseTokenizer.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libLinearAlgebra.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libLinearAlgebra.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libLinearAlgebra.dylib")::RegisterSectionModules("libLinearAlgebra.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libChineseTokenizer.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libChineseTokenizer.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libChineseTokenizer.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libChineseTokenizer.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libChineseTokenizer.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Lexicon")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("LanguageModeling")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LanguageModeling")::CreateInstance(Module)
 SwiftASTContextForModule("LanguageModeling")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LanguageModeling")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LanguageModeling")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LanguageModeling")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libSparseBLAS.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libSparseBLAS.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libSparseBLAS.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libSparseBLAS.dylib")::RegisterSectionModules("libSparseBLAS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libBNNS.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libBNNS.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libBNNS.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libBNNS.dylib")::RegisterSectionModules("libBNNS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libQuadrature.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libQuadrature.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libQuadrature.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libQuadrature.dylib")::RegisterSectionModules("libQuadrature.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AppleSauce")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleSauce")::CreateInstance(Module)
 SwiftASTContextForModule("AppleSauce")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleSauce")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleSauce")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppleSauce")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libChineseTokenizer.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libChineseTokenizer.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libChineseTokenizer.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libChineseTokenizer.dylib")::RegisterSectionModules("libChineseTokenizer.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreEmoji")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreEmoji")::CreateInstance(Module)
 SwiftASTContextForModule("CoreEmoji")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreEmoji")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreEmoji")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreEmoji")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libcmph.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcmph.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcmph.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcmph.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcmph.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSparse.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libSparse.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libSparse.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libSparse.dylib")::RegisterSectionModules("libSparse.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcmph.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Lexicon")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Lexicon")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Lexicon")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Lexicon")::RegisterSectionModules("Lexicon") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("LinguisticData")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("LinguisticData")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LinguisticData")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("LinguisticData")::RegisterSectionModules("LinguisticData") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CFOpenDirectory")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CFOpenDirectory")::CreateInstance(Module)
 SwiftASTContextForModule("CFOpenDirectory")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CFOpenDirectory")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CFOpenDirectory")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("OpenDirectory")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OpenDirectory")::CreateInstance(Module)
 SwiftASTContextForModule("OpenDirectory")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OpenDirectory")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OpenDirectory")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CFOpenDirectory")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OpenDirectory")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("LanguageModeling")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("LanguageModeling")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LanguageModeling")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("LanguageModeling")::RegisterSectionModules("LanguageModeling") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("APFS")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("APFS")::CreateInstance(Module)
 SwiftASTContextForModule("APFS")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("APFS")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("APFS")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("APFS")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("SecurityFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SecurityFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("SecurityFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SecurityFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SecurityFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SecurityFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libutil.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libutil.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libutil.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libutil.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libutil.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libutil.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleSauce")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleSauce")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleSauce")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleSauce")::RegisterSectionModules("AppleSauce") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcmph.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcmph.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcmph.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcmph.dylib")::RegisterSectionModules("libcmph.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreServicesStore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreServicesStore")::CreateInstance(Module)
 SwiftASTContextForModule("CoreServicesStore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreServicesStore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreServicesStore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreServicesStore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OpenDirectory")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OpenDirectory")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OpenDirectory")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OpenDirectory")::RegisterSectionModules("OpenDirectory") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libxslt.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libxslt.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("CoreEmoji")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreEmoji")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreEmoji")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreEmoji")::RegisterSectionModules("CoreEmoji") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libxslt.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libxslt.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libxslt.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CFOpenDirectory")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxslt.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CFOpenDirectory")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CFOpenDirectory")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CFOpenDirectory")::RegisterSectionModules("CFOpenDirectory") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("BackgroundTaskManagement")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("BackgroundTaskManagement")::CreateInstance(Module)
 SwiftASTContextForModule("BackgroundTaskManagement")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("BackgroundTaskManagement")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("BackgroundTaskManagement")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("BackgroundTaskManagement")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libRadiance.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libRadiance.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libRadiance.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libRadiance.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libRadiance.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libRadiance.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("APFS")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SecurityFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("APFS")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("APFS")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("APFS")::RegisterSectionModules("APFS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SecurityFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SecurityFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libutil.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SecurityFoundation")::RegisterSectionModules("SecurityFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libJPEG.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libJPEG.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libJPEG.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libJPEG.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libJPEG.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libutil.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libutil.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libutil.dylib")::RegisterSectionModules("libutil.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libJPEG.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libPng.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libPng.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libPng.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libPng.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libPng.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libTIFF.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libTIFF.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libTIFF.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libTIFF.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libTIFF.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libPng.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libGIF.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGIF.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libGIF.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGIF.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGIF.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libTIFF.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGIF.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreServicesStore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreServicesStore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreServicesStore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreServicesStore")::RegisterSectionModules("CoreServicesStore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libJP2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libJP2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libJP2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libJP2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libJP2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libJP2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libxslt.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libxslt.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libxslt.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libxslt.1.dylib")::RegisterSectionModules("libxslt.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libRadiance.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libRadiance.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libRadiance.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libRadiance.dylib")::RegisterSectionModules("libRadiance.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libJPEG.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libexpat.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libexpat.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libexpat.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libexpat.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libexpat.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libJPEG.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libJPEG.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libJPEG.dylib")::RegisterSectionModules("libJPEG.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libexpat.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libPng.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("BackgroundTaskManagement")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libPng.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libPng.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libPng.dylib")::RegisterSectionModules("libPng.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("BackgroundTaskManagement")::GetASTContext() -- SDK version: 12.3
 TypeSystemSwiftTypeRef("AppleJPEG")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("BackgroundTaskManagement")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("BackgroundTaskManagement")::RegisterSectionModules("BackgroundTaskManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libTIFF.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libFontParser.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libFontParser.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libTIFF.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libTIFF.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libFontParser.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libFontParser.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libFontParser.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppleJPEG")::CreateInstance(Module)
 SwiftASTContextForModule("AppleJPEG")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleJPEG")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleJPEG")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libFontParser.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libTIFF.dylib")::RegisterSectionModules("libTIFF.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleJPEG")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("RunningBoardServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("RunningBoardServices")::CreateInstance(Module)
 SwiftASTContextForModule("RunningBoardServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RunningBoardServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RunningBoardServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RunningBoardServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("IOSurfaceAccelerator")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IOSurfaceAccelerator")::CreateInstance(Module)
 SwiftASTContextForModule("IOSurfaceAccelerator")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOSurfaceAccelerator")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOSurfaceAccelerator")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOSurfaceAccelerator")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGIF.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libGIF.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGIF.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGIF.dylib")::RegisterSectionModules("libGIF.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("WatchdogClient")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WatchdogClient")::CreateInstance(Module)
 SwiftASTContextForModule("WatchdogClient")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("WatchdogClient")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("WatchdogClient")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("WatchdogClient")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreDisplay")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreDisplay")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDisplay")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDisplay")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDisplay")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDisplay")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libJP2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libJP2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libJP2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libJP2.dylib")::RegisterSectionModules("libJP2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreMedia")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreMedia")::CreateInstance(Module)
 SwiftASTContextForModule("CoreMedia")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreMedia")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreMedia")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreMedia")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libexpat.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleJPEG")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libexpat.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libexpat.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libexpat.1.dylib")::RegisterSectionModules("libexpat.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleJPEG")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleJPEG")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleJPEG")::RegisterSectionModules("AppleJPEG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOSurfaceAccelerator")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOSurfaceAccelerator")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOSurfaceAccelerator")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOSurfaceAccelerator")::RegisterSectionModules("IOSurfaceAccelerator") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("RunningBoardServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("RunningBoardServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RunningBoardServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RunningBoardServices")::RegisterSectionModules("RunningBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libFontParser.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libFontParser.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libFontParser.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libFontParser.dylib")::RegisterSectionModules("libFontParser.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IOAccelerator")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IOAccelerator")::CreateInstance(Module)
 SwiftASTContextForModule("IOAccelerator")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOAccelerator")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOAccelerator")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("CoreVideo")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreVideo")::CreateInstance(Module)
 SwiftASTContextForModule("CoreVideo")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreVideo")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreVideo")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOAccelerator")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreVideo")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MetalPerformanceShaders")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MetalPerformanceShaders")::CreateInstance(Module)
 SwiftASTContextForModule("MetalPerformanceShaders")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MetalPerformanceShaders")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MetalPerformanceShaders")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MetalPerformanceShaders")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("VideoToolbox")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("VideoToolbox")::CreateInstance(Module)
 SwiftASTContextForModule("VideoToolbox")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("VideoToolbox")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("VideoToolbox")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("WatchdogClient")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("VideoToolbox")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("WatchdogClient")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WatchdogClient")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("BaseBoard")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WatchdogClient")::RegisterSectionModules("WatchdogClient") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreDisplay")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreDisplay")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDisplay")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreDisplay")::RegisterSectionModules("CoreDisplay") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("BaseBoard")::CreateInstance(Module)
 SwiftASTContextForModule("BaseBoard")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("BaseBoard")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("BaseBoard")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("BaseBoard")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ProtocolBuffer")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ProtocolBuffer")::CreateInstance(Module)
 SwiftASTContextForModule("ProtocolBuffer")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ProtocolBuffer")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ProtocolBuffer")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ProtocolBuffer")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("GPUWrangler")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GPUWrangler")::CreateInstance(Module)
 SwiftASTContextForModule("GPUWrangler")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GPUWrangler")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GPUWrangler")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GPUWrangler")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreMedia")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreMedia")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreMedia")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreMedia")::RegisterSectionModules("CoreMedia") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOAccelerator")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreVideo")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MetalPerformanceShaders")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOAccelerator")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOAccelerator")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOAccelerator")::RegisterSectionModules("IOAccelerator") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MetalPerformanceShaders")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MetalPerformanceShaders")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreVideo")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreVideo")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("IOPresentment")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreVideo")::RegisterSectionModules("CoreVideo") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MetalPerformanceShaders")::RegisterSectionModules("MetalPerformanceShaders") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOPresentment")::CreateInstance(Module)
 SwiftASTContextForModule("IOPresentment")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOPresentment")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOPresentment")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOPresentment")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DSExternalDisplay")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DSExternalDisplay")::CreateInstance(Module)
 SwiftASTContextForModule("DSExternalDisplay")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DSExternalDisplay")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DSExternalDisplay")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libCoreFSCache.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCoreFSCache.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCoreFSCache.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCoreFSCache.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCoreFSCache.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DSExternalDisplay")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libGPUCompilerUtils.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCoreFSCache.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("ProtocolBuffer")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ProtocolBuffer")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ProtocolBuffer")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ProtocolBuffer")::RegisterSectionModules("ProtocolBuffer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("BaseBoard")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("BaseBoard")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("BaseBoard")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("BaseBoard")::RegisterSectionModules("BaseBoard") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GPUWrangler")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("VideoToolbox")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GPUWrangler")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GPUWrangler")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GPUWrangler")::RegisterSectionModules("GPUWrangler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("VideoToolbox")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("VideoToolbox")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("VideoToolbox")::RegisterSectionModules("VideoToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CMCaptureCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CMCaptureCore")::CreateInstance(Module)
 SwiftASTContextForModule("CMCaptureCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CMCaptureCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CMCaptureCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CMCaptureCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AppServerSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppServerSupport")::CreateInstance(Module)
 SwiftASTContextForModule("AppServerSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppServerSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppServerSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppServerSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("perfdata")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("perfdata")::CreateInstance(Module)
 SwiftASTContextForModule("perfdata")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("perfdata")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("perfdata")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("perfdata")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AudioToolboxCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AudioToolboxCore")::CreateInstance(Module)
 SwiftASTContextForModule("AudioToolboxCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AudioToolboxCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AudioToolboxCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AudioToolboxCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libCoreFSCache.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCoreFSCache.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCoreFSCache.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCoreFSCache.dylib")::RegisterSectionModules("libCoreFSCache.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DSExternalDisplay")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DSExternalDisplay")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DSExternalDisplay")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DSExternalDisplay")::RegisterSectionModules("DSExternalDisplay") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("caulk")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("caulk")::CreateInstance(Module)
 SwiftASTContextForModule("caulk")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("caulk")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("caulk")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("caulk")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOPresentment")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOPresentment")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOPresentment")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IOPresentment")::RegisterSectionModules("IOPresentment") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGPUCompilerUtils.dylib")::RegisterSectionModules("libGPUCompilerUtils.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libAudioStatistics.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libAudioStatistics.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libAudioStatistics.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libAudioStatistics.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libAudioStatistics.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libAudioStatistics.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("perfdata")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("perfdata")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("perfdata")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("perfdata")::RegisterSectionModules("perfdata") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SystemPolicy")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SystemPolicy")::CreateInstance(Module)
 SwiftASTContextForModule("SystemPolicy")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SystemPolicy")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SystemPolicy")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SystemPolicy")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libSMC.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libSMC.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libSMC.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libSMC.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libSMC.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSMC.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppServerSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppServerSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppServerSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppServerSupport")::RegisterSectionModules("AppServerSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CMCaptureCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("CoreMIDI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreMIDI")::CreateInstance(Module)
 SwiftASTContextForModule("CMCaptureCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CMCaptureCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CMCaptureCore")::RegisterSectionModules("CMCaptureCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreMIDI")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreMIDI")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreMIDI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreMIDI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AudioToolboxCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AudioToolboxCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AudioToolboxCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AudioToolboxCore")::RegisterSectionModules("AudioToolboxCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libAudioToolboxUtility.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("OSAServicesClient")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OSAServicesClient")::CreateInstance(Module)
 SwiftASTContextForModule("OSAServicesClient")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OSAServicesClient")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OSAServicesClient")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OSAServicesClient")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libperfcheck.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libperfcheck.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libperfcheck.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libperfcheck.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libperfcheck.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libperfcheck.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("caulk")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("caulk")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("caulk")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("caulk")::RegisterSectionModules("caulk") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SystemPolicy")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SystemPolicy")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SystemPolicy")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SystemPolicy")::RegisterSectionModules("SystemPolicy") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libAudioStatistics.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libAudioStatistics.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libAudioStatistics.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libAudioStatistics.dylib")::RegisterSectionModules("libAudioStatistics.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libmis.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libmis.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libmis.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libmis.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libmis.dylib")::SetTriple("x86_64-apple-macosx10.11.0") setting to "x86_64-apple-macosx10.11.0"
 SwiftASTContextForModule("libmis.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libGLU.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGLU.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libGLU.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGLU.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGLU.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libGLU.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libGFXShared.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGFXShared.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libGFXShared.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGFXShared.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGFXShared.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSMC.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libGFXShared.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libSMC.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libSMC.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libSMC.dylib")::RegisterSectionModules("libSMC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libGL.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGL.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libGL.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGL.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGL.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libGL.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreMIDI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreMIDI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreMIDI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreMIDI")::RegisterSectionModules("CoreMIDI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libperfcheck.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libGLImage.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGLImage.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libperfcheck.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libperfcheck.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGLImage.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libGLImage.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libGLImage.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OSAServicesClient")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libperfcheck.dylib")::RegisterSectionModules("libperfcheck.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libGLImage.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OSAServicesClient")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OSAServicesClient")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OSAServicesClient")::RegisterSectionModules("OSAServicesClient") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libAudioToolboxUtility.dylib")::RegisterSectionModules("libAudioToolboxUtility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libCVMSPluginSupport.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libCoreVMClient.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCoreVMClient.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCoreVMClient.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCoreVMClient.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCoreVMClient.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libCoreVMClient.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MPSCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSCore")::CreateInstance(Module)
 SwiftASTContextForModule("MPSCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MPSCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libmis.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libmis.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libmis.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libmis.dylib")::RegisterSectionModules("libmis.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MPSImage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libGFXShared.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSImage")::CreateInstance(Module)
 SwiftASTContextForModule("MPSImage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSImage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSImage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libGL.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libGFXShared.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGFXShared.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGFXShared.dylib")::RegisterSectionModules("libGFXShared.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MPSImage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGL.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGL.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGL.dylib")::RegisterSectionModules("libGL.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MPSNeuralNetwork")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSNeuralNetwork")::CreateInstance(Module)
 SwiftASTContextForModule("MPSNeuralNetwork")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSNeuralNetwork")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSNeuralNetwork")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MPSNeuralNetwork")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MPSMatrix")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSMatrix")::CreateInstance(Module)
 SwiftASTContextForModule("MPSMatrix")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSMatrix")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSMatrix")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libGLU.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSMatrix")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libGLU.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGLU.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGLU.dylib")::RegisterSectionModules("libGLU.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCoreVMClient.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libGLImage.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCVMSPluginSupport.dylib")::RegisterSectionModules("libCVMSPluginSupport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libCoreVMClient.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCoreVMClient.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCoreVMClient.dylib")::RegisterSectionModules("libCoreVMClient.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libGLImage.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libGLImage.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libGLImage.dylib")::RegisterSectionModules("libGLImage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MPSRayIntersector")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSRayIntersector")::CreateInstance(Module)
 SwiftASTContextForModule("MPSRayIntersector")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSRayIntersector")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSRayIntersector")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("MPSNDArray")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSNDArray")::CreateInstance(Module)
 SwiftASTContextForModule("MPSNDArray")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSNDArray")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MPSNDArray")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("MPSFunctions")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSFunctions")::CreateInstance(Module)
 SwiftASTContextForModule("MPSFunctions")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MPSFunctions")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 TypeSystemSwiftTypeRef("MetalTools")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSFunctions")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MPSNDArray")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MetalTools")::CreateInstance(Module)
 SwiftASTContextForModule("MetalTools")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MetalTools")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MetalTools")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MPSFunctions")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MetalTools")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MPSCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSCore")::RegisterSectionModules("MPSCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MPSRayIntersector")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AggregateDictionary")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AggregateDictionary")::CreateInstance(Module)
 SwiftASTContextForModule("AggregateDictionary")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AggregateDictionary")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AggregateDictionary")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AggregateDictionary")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MPSImage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSImage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSImage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSImage")::RegisterSectionModules("MPSImage") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libIOReport.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libIOReport.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libIOReport.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libIOReport.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libIOReport.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libIOReport.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MPSMatrix")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSMatrix")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSMatrix")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSMatrix")::RegisterSectionModules("MPSMatrix") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MPSNDArray")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSNDArray")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSNDArray")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("OpenCL")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MPSNDArray")::RegisterSectionModules("MPSNDArray") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MPSFunctions")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSFunctions")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSFunctions")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSFunctions")::RegisterSectionModules("MPSFunctions") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("OpenCL")::CreateInstance(Module)
 SwiftASTContextForModule("OpenCL")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OpenCL")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OpenCL")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OpenCL")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MPSNeuralNetwork")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AggregateDictionary")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MPSNeuralNetwork")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSNeuralNetwork")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSNeuralNetwork")::RegisterSectionModules("MPSNeuralNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("FaceCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FaceCore")::CreateInstance(Module)
 SwiftASTContextForModule("AggregateDictionary")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AggregateDictionary")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AggregateDictionary")::RegisterSectionModules("AggregateDictionary") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MPSRayIntersector")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FaceCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FaceCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FaceCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MPSRayIntersector")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MPSRayIntersector")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MPSRayIntersector")::RegisterSectionModules("MPSRayIntersector") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("FaceCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("GraphVisualizer")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GraphVisualizer")::CreateInstance(Module)
 SwiftASTContextForModule("GraphVisualizer")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GraphVisualizer")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GraphVisualizer")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GraphVisualizer")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MetalTools")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MetalTools")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MetalTools")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MetalTools")::RegisterSectionModules("MetalTools") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("FontServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FontServices")::CreateInstance(Module)
 SwiftASTContextForModule("FontServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FontServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FontServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("OTSVG")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OTSVG")::CreateInstance(Module)
 SwiftASTContextForModule("FontServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OTSVG")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OTSVG")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OTSVG")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OTSVG")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libFontRegistry.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libFontRegistry.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libFontRegistry.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libFontRegistry.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libFontRegistry.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libFontRegistry.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libhvf.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libhvf.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libhvf.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libhvf.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libhvf.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libhvf.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libIOReport.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libIOReport.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libIOReport.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libIOReport.dylib")::RegisterSectionModules("libIOReport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libXTFontStaticRegistryData.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("FontServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OTSVG")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FontServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FontServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FontServices")::RegisterSectionModules("FontServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("OTSVG")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OTSVG")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OTSVG")::RegisterSectionModules("OTSVG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libhvf.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libhvf.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libhvf.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libhvf.dylib")::RegisterSectionModules("libhvf.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AppleVA")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleVA")::CreateInstance(Module)
 SwiftASTContextForModule("AppleVA")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleVA")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleVA")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OpenCL")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleVA")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OpenCL")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OpenCL")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OpenCL")::RegisterSectionModules("OpenCL") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("ATS")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ATS")::CreateInstance(Module)
 SwiftASTContextForModule("ATS")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ATS")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ATS")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ATS")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("HIServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("HIServices")::CreateInstance(Module)
 SwiftASTContextForModule("HIServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("HIServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("HIServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("HIServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("PrintCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PrintCore")::CreateInstance(Module)
 SwiftASTContextForModule("PrintCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PrintCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PrintCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libFontRegistry.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PrintCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libFontRegistry.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libFontRegistry.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libFontRegistry.dylib")::RegisterSectionModules("libFontRegistry.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GraphVisualizer")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GraphVisualizer")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GraphVisualizer")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GraphVisualizer")::RegisterSectionModules("GraphVisualizer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("FaceCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FaceCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FaceCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FaceCore")::RegisterSectionModules("FaceCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("QD")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("QD")::CreateInstance(Module)
 SwiftASTContextForModule("QD")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("QD")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("QD")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("QD")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ColorSyncLegacy")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ColorSyncLegacy")::CreateInstance(Module)
 SwiftASTContextForModule("ColorSyncLegacy")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ColorSyncLegacy")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ColorSyncLegacy")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ColorSyncLegacy")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("SpeechSynthesis")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SpeechSynthesis")::CreateInstance(Module)
 SwiftASTContextForModule("SpeechSynthesis")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SpeechSynthesis")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SpeechSynthesis")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SpeechSynthesis")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libXTFontStaticRegistryData.dylib")::RegisterSectionModules("libXTFontStaticRegistryData.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("ATSUI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ATSUI")::CreateInstance(Module)
 SwiftASTContextForModule("ATSUI")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ATSUI")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ATSUI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ATSUI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("PrintCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PrintCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PrintCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PrintCore")::RegisterSectionModules("PrintCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("HIServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("HIServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("HIServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("HIServices")::RegisterSectionModules("HIServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleVA")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleVA")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleVA")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleVA")::RegisterSectionModules("AppleVA") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcups.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcups.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("ColorSyncLegacy")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcups.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcups.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcups.2.dylib")::SetTriple("x86_64-apple-macosx10.12.3") setting to "x86_64-apple-macosx10.12.3"
 SwiftASTContextForModule("ColorSyncLegacy")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ColorSyncLegacy")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ColorSyncLegacy")::RegisterSectionModules("ColorSyncLegacy") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcups.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SpeechSynthesis")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("Kerberos")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Kerberos")::CreateInstance(Module)
 SwiftASTContextForModule("Kerberos")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Kerberos")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Kerberos")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SpeechSynthesis")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SpeechSynthesis")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SpeechSynthesis")::RegisterSectionModules("SpeechSynthesis") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ATS")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Kerberos")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("GSS")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GSS")::CreateInstance(Module)
 SwiftASTContextForModule("ATS")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ATS")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ATS")::RegisterSectionModules("ATS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GSS")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GSS")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GSS")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GSS")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("QD")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("QD")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("QD")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("QD")::RegisterSectionModules("QD") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libresolv.9.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libresolv.9.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libresolv.9.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libresolv.9.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libresolv.9.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libresolv.9.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Heimdal")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Heimdal")::CreateInstance(Module)
 SwiftASTContextForModule("Heimdal")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Heimdal")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Heimdal")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libHeimdalProxy.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libHeimdalProxy.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libHeimdalProxy.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Heimdal")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libHeimdalProxy.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Network")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Network")::CreateInstance(Module)
 SwiftASTContextForModule("Network")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Network")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Network")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Network")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("ATSUI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ATSUI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ATSUI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ATSUI")::RegisterSectionModules("ATSUI") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libheimdal-asn1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libheimdal-asn1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libheimdal-asn1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libheimdal-asn1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libheimdal-asn1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libheimdal-asn1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Kerberos")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcups.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcups.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcups.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcups.2.dylib")::RegisterSectionModules("libcups.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Kerberos")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Kerberos")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Kerberos")::RegisterSectionModules("Kerberos") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GSS")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GSS")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GSS")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GSS")::RegisterSectionModules("GSS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Heimdal")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libresolv.9.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Heimdal")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Heimdal")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libresolv.9.dylib")::GetASTContext() -- SDK version: 12.3
 TypeSystemSwiftTypeRef("CommonAuth")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libresolv.9.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Heimdal")::RegisterSectionModules("Heimdal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CommonAuth")::CreateInstance(Module)
 SwiftASTContextForModule("libresolv.9.dylib")::RegisterSectionModules("libresolv.9.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CommonAuth")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CommonAuth")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CommonAuth")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("AudioSession")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AudioSession")::CreateInstance(Module)
 SwiftASTContextForModule("CommonAuth")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AudioSession")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AudioSession")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AudioSession")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AudioSession")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Network")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Network")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Network")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Network")::RegisterSectionModules("Network") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MediaExperience")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MediaExperience")::CreateInstance(Module)
 SwiftASTContextForModule("MediaExperience")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MediaExperience")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MediaExperience")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MediaExperience")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libSessionUtility.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libSessionUtility.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libSessionUtility.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libSessionUtility.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libSessionUtility.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libSessionUtility.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AudioResourceArbitration")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libHeimdalProxy.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AudioResourceArbitration")::CreateInstance(Module)
 SwiftASTContextForModule("AudioResourceArbitration")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AudioResourceArbitration")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AudioResourceArbitration")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libHeimdalProxy.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libHeimdalProxy.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libHeimdalProxy.dylib")::RegisterSectionModules("libHeimdalProxy.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AudioResourceArbitration")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("PowerLog")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PowerLog")::CreateInstance(Module)
 SwiftASTContextForModule("PowerLog")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PowerLog")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PowerLog")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("PowerLog")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("IconFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IconFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("IconFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IconFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IconFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IconFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libheimdal-asn1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libheimdal-asn1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libheimdal-asn1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libheimdal-asn1.dylib")::RegisterSectionModules("libheimdal-asn1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SpeechRecognitionCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SpeechRecognitionCore")::CreateInstance(Module)
 SwiftASTContextForModule("SpeechRecognitionCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SpeechRecognitionCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SpeechRecognitionCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SpeechRecognitionCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AudioSession")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MediaExperience")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CommonAuth")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AudioSession")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AudioSession")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AudioSession")::RegisterSectionModules("AudioSession") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MediaExperience")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MediaExperience")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MediaExperience")::RegisterSectionModules("MediaExperience") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CommonAuth")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CommonAuth")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CommonAuth")::RegisterSectionModules("CommonAuth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AudioResourceArbitration")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AudioResourceArbitration")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AudioResourceArbitration")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AudioResourceArbitration")::RegisterSectionModules("AudioResourceArbitration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libSessionUtility.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libSessionUtility.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libSessionUtility.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libSessionUtility.dylib")::RegisterSectionModules("libSessionUtility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SwiftUI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SwiftUI")::CreateInstance(Module)
 SwiftASTContextForModule("SwiftUI")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SwiftUI")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SwiftUI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("Accessibility")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Accessibility")::CreateInstance(Module)
 SwiftASTContextForModule("Accessibility")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Accessibility")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Accessibility")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("CoreMaterial")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreMaterial")::CreateInstance(Module)
 SwiftASTContextForModule("CoreMaterial")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreMaterial")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreMaterial")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IconFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PowerLog")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Accessibility")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreMaterial")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IconFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IconFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PowerLog")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PowerLog")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IconFoundation")::RegisterSectionModules("IconFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("PowerLog")::RegisterSectionModules("PowerLog") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SwiftUI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("RenderBox")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("RenderBox")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("AttributeGraph")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AttributeGraph")::CreateInstance(Module)
 SwiftASTContextForModule("RenderBox")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RenderBox")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RenderBox")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AttributeGraph")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AttributeGraph")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AttributeGraph")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RenderBox")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AttributeGraph")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Combine")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Combine")::CreateInstance(Module)
 SwiftASTContextForModule("Combine")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Combine")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Combine")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Combine")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreGlyphs")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreGlyphs")::CreateInstance(Module)
 SwiftASTContextForModule("CoreGlyphs")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreGlyphs")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreGlyphs")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreGlyphs")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SpeechRecognitionCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SpeechRecognitionCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SpeechRecognitionCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SpeechRecognitionCore")::RegisterSectionModules("SpeechRecognitionCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreUtils")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreUtils")::CreateInstance(Module)
 SwiftASTContextForModule("CoreUtils")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreUtils")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreUtils")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreUtils")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SwiftUI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SwiftUI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SwiftUI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreMaterial")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SwiftUI")::RegisterSectionModules("SwiftUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreMaterial")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreMaterial")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreMaterial")::RegisterSectionModules("CoreMaterial") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Accessibility")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Accessibility")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Accessibility")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Accessibility")::RegisterSectionModules("Accessibility") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AttributeGraph")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("RenderBox")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("IntlPreferences")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IntlPreferences")::CreateInstance(Module)
 SwiftASTContextForModule("IntlPreferences")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IntlPreferences")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IntlPreferences")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreGlyphs")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Combine")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AttributeGraph")::GetASTContext() -- SDK version: 12.3
 TypeSystemSwiftTypeRef("RecapPerformanceTesting")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AttributeGraph")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RenderBox")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RenderBox")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AttributeGraph")::RegisterSectionModules("AttributeGraph") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreGlyphs")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreGlyphs")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RenderBox")::RegisterSectionModules("RenderBox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("RecapPerformanceTesting")::CreateInstance(Module)
 SwiftASTContextForModule("IntlPreferences")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("RecapPerformanceTesting")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RecapPerformanceTesting")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RecapPerformanceTesting")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreGlyphs")::RegisterSectionModules("CoreGlyphs") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Combine")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Combine")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Combine")::RegisterSectionModules("Combine") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("RecapPerformanceTesting")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftAVFoundation.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftAccelerate.dylib")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("libswiftAppKit.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftAccelerate.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftAppKit.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftAccelerate.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftAccelerate.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftAccelerate.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftAppKit.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftAppKit.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftAppKit.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftAccelerate.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftCloudKit.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftAppKit.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCloudKit.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCloudKit.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCloudKit.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCloudKit.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libswiftCore.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCore.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCore.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCore.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCore.dylib")::SetTriple("x86_64-apple-macosx11.0.0") setting to "x86_64-apple-macosx11.0.0"
 SwiftASTContextForModule("libswiftCloudKit.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCore.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreUtils")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreUtils")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreUtils")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreUtils")::RegisterSectionModules("CoreUtils") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftCoreAudio.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IntlPreferences")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IntlPreferences")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IntlPreferences")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RecapPerformanceTesting")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IntlPreferences")::RegisterSectionModules("IntlPreferences") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("RecapPerformanceTesting")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RecapPerformanceTesting")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RecapPerformanceTesting")::RegisterSectionModules("RecapPerformanceTesting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCloudKit.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftAVFoundation.dylib")::RegisterSectionModules("libswiftAVFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftCloudKit.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCloudKit.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCloudKit.dylib")::RegisterSectionModules("libswiftCloudKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftAppKit.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libswiftCoreData.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreData.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftAppKit.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftAppKit.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCore.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCore.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCore.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCore.dylib")::RegisterSectionModules("libswiftCore.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftCoreFoundation.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreData.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreData.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreData.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreData.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftAppKit.dylib")::RegisterSectionModules("libswiftAppKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftAccelerate.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftAccelerate.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftAccelerate.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftAccelerate.dylib")::RegisterSectionModules("libswiftAccelerate.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftCoreGraphics.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftCoreImage.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreImage.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreImage.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreImage.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreImage.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreImage.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftCoreLocation.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("libswiftCoreMIDI.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftCoreMedia.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreAudio.dylib")::RegisterSectionModules("libswiftCoreAudio.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftDarwin.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftDarwin.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftDarwin.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftDarwin.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftDarwin.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftDarwin.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreData.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreData.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreData.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreData.dylib")::RegisterSectionModules("libswiftCoreData.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftDispatch.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftDispatch.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftDispatch.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftDispatch.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftDispatch.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreGraphics.dylib")::RegisterSectionModules("libswiftCoreGraphics.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftDispatch.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreFoundation.dylib")::RegisterSectionModules("libswiftCoreFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreLocation.dylib")::RegisterSectionModules("libswiftCoreLocation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreMedia.dylib")::RegisterSectionModules("libswiftCoreMedia.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libswiftFoundation.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftFoundation.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftFoundation.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftFoundation.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftFoundation.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftCoreMIDI.dylib")::RegisterSectionModules("libswiftCoreMIDI.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftFoundation.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftIOKit.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftIOKit.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftIOKit.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftIOKit.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftIOKit.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftIOKit.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftMetal.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftMetal.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftMetal.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftMetal.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftMetal.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftMetal.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftObjectiveC.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftCoreImage.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftCoreImage.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftCoreImage.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftCoreImage.dylib")::RegisterSectionModules("libswiftCoreImage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftQuartzCore.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libswiftUniformTypeIdentifiers.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftDarwin.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftDarwin.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftDarwin.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftDarwin.dylib")::RegisterSectionModules("libswiftDarwin.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftXPC.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftXPC.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftXPC.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftXPC.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftXPC.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftXPC.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftDispatch.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftDispatch.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftDispatch.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftDispatch.dylib")::RegisterSectionModules("libswiftDispatch.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftObjectiveC.dylib")::RegisterSectionModules("libswiftObjectiveC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftIOKit.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftMetal.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftIOKit.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftIOKit.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftMetal.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftMetal.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftMetal.dylib")::RegisterSectionModules("libswiftMetal.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftFoundation.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftFoundation.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftFoundation.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftFoundation.dylib")::RegisterSectionModules("libswiftFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftIOKit.dylib")::RegisterSectionModules("libswiftIOKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswift_Concurrency.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswift_Concurrency.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswift_Concurrency.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswift_Concurrency.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswift_Concurrency.dylib")::SetTriple("x86_64-apple-macosx11.0.0") setting to "x86_64-apple-macosx11.0.0"
 SwiftASTContextForModule("libswift_Concurrency.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftQuartzCore.dylib")::RegisterSectionModules("libswiftQuartzCore.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libswiftos.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftos.dylib")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("libswiftsimd.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libswiftsimd.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libswiftos.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftos.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftos.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftsimd.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libswiftsimd.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libswiftsimd.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libswiftos.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftsimd.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AXMediaUtilities")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AXMediaUtilities")::CreateInstance(Module)
 SwiftASTContextForModule("AXMediaUtilities")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AXMediaUtilities")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AXMediaUtilities")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AXMediaUtilities")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AccessibilitySharedSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AccessibilitySharedSupport")::CreateInstance(Module)
 SwiftASTContextForModule("AccessibilitySharedSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AccessibilitySharedSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AccessibilitySharedSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AccessibilitySharedSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftUniformTypeIdentifiers.dylib")::RegisterSectionModules("libswiftUniformTypeIdentifiers.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libAccessibility.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libAccessibility.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libAccessibility.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libAccessibility.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libAccessibility.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libAccessibility.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AXCoreUtilities")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AXCoreUtilities")::CreateInstance(Module)
 SwiftASTContextForModule("AXCoreUtilities")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AXCoreUtilities")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AXCoreUtilities")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AXCoreUtilities")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswiftXPC.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftXPC.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftXPC.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftXPC.dylib")::RegisterSectionModules("libswiftXPC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("NaturalLanguage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("NaturalLanguage")::CreateInstance(Module)
 SwiftASTContextForModule("NaturalLanguage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("NaturalLanguage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("NaturalLanguage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("NaturalLanguage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libswift_Concurrency.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswift_Concurrency.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswift_Concurrency.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswift_Concurrency.dylib")::RegisterSectionModules("libswift_Concurrency.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftos.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftos.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftos.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftos.dylib")::RegisterSectionModules("libswiftos.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AXMediaUtilities")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libswiftsimd.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AXMediaUtilities")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AXMediaUtilities")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AXMediaUtilities")::RegisterSectionModules("AXMediaUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libswiftsimd.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libswiftsimd.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libswiftsimd.dylib")::RegisterSectionModules("libswiftsimd.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AccessibilitySharedSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("AXAssetLoader")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AXAssetLoader")::CreateInstance(Module)
 SwiftASTContextForModule("AXAssetLoader")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AXAssetLoader")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AXAssetLoader")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AccessibilitySharedSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AccessibilitySharedSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AccessibilitySharedSupport")::RegisterSectionModules("AccessibilitySharedSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AXAssetLoader")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Espresso")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Espresso")::CreateInstance(Module)
 SwiftASTContextForModule("Espresso")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Espresso")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Espresso")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("MediaAccessibility")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MediaAccessibility")::CreateInstance(Module)
 SwiftASTContextForModule("MediaAccessibility")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MediaAccessibility")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MediaAccessibility")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Espresso")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MediaAccessibility")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MobileAsset")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MobileAsset")::CreateInstance(Module)
 SwiftASTContextForModule("MobileAsset")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MobileAsset")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MobileAsset")::SetTriple("x86_64-apple-macosx10.14.0") setting to "x86_64-apple-macosx10.14.0"
 SwiftASTContextForModule("MobileAsset")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreML")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreML")::CreateInstance(Module)
 SwiftASTContextForModule("CoreML")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreML")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreML")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreML")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AXCoreUtilities")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libAccessibility.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AXCoreUtilities")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AXCoreUtilities")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libAccessibility.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libAccessibility.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AXCoreUtilities")::RegisterSectionModules("AXCoreUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libAccessibility.dylib")::RegisterSectionModules("libAccessibility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AVFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AVFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("AVFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AVFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AVFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("AVFAudio")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AVFAudio")::CreateInstance(Module)
 SwiftASTContextForModule("AVFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AVFAudio")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AVFAudio")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AVFAudio")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AVFAudio")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("NaturalLanguage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("NaturalLanguage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("NaturalLanguage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("NaturalLanguage")::RegisterSectionModules("NaturalLanguage") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Montreal")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Montreal")::CreateInstance(Module)
 SwiftASTContextForModule("Montreal")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Montreal")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Montreal")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Montreal")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AXAssetLoader")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AXAssetLoader")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AXAssetLoader")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AXAssetLoader")::RegisterSectionModules("AXAssetLoader") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Espresso")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MediaAccessibility")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Espresso")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Espresso")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MediaAccessibility")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MediaAccessibility")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MediaAccessibility")::RegisterSectionModules("MediaAccessibility") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Espresso")::RegisterSectionModules("Espresso") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MobileAsset")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("DuetActivityScheduler")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DuetActivityScheduler")::CreateInstance(Module)
 SwiftASTContextForModule("DuetActivityScheduler")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DuetActivityScheduler")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DuetActivityScheduler")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MobileAsset")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MobileAsset")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MobileAsset")::RegisterSectionModules("MobileAsset") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DuetActivityScheduler")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreML")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreML")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreML")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreML")::RegisterSectionModules("CoreML") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MLCompute")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MLCompute")::CreateInstance(Module)
 SwiftASTContextForModule("MLCompute")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MLCompute")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MLCompute")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MLCompute")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CloudKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CloudKit")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("MIL")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CloudKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CloudKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CloudKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MIL")::CreateInstance(Module)
 SwiftASTContextForModule("MIL")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MIL")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MIL")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CloudKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MIL")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MLAssetIO")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MLAssetIO")::CreateInstance(Module)
 SwiftASTContextForModule("MLAssetIO")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MLAssetIO")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MLAssetIO")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MLAssetIO")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AVFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AVFAudio")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AVFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AVFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AVFAudio")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AVFAudio")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AVFoundation")::RegisterSectionModules("AVFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AVFAudio")::RegisterSectionModules("AVFAudio") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreDuet")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreDuet")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDuet")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDuet")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDuet")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDuet")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreDuetContext")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreDuetContext")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDuetContext")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDuetContext")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDuetContext")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDuetContext")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Montreal")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Montreal")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Montreal")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Montreal")::RegisterSectionModules("Montreal") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CrashReporterSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CrashReporterSupport")::CreateInstance(Module)
 SwiftASTContextForModule("CrashReporterSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CrashReporterSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CrashReporterSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CrashReporterSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("DuetActivityScheduler")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DuetActivityScheduler")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DuetActivityScheduler")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DuetActivityScheduler")::RegisterSectionModules("DuetActivityScheduler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CloudKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CloudKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CloudKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CloudKit")::RegisterSectionModules("CloudKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MIL")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MIL")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MIL")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MIL")::RegisterSectionModules("MIL") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreTelephony")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreTelephony")::CreateInstance(Module)
 SwiftASTContextForModule("CoreTelephony")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreTelephony")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreTelephony")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreTelephony")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MLCompute")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MLCompute")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MLCompute")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MLCompute")::RegisterSectionModules("MLCompute") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreDuetDebugLogging")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreDuetDebugLogging")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDuetDebugLogging")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDuetDebugLogging")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDuetDebugLogging")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDuetDebugLogging")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ApplePushService")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ApplePushService")::CreateInstance(Module)
 SwiftASTContextForModule("ApplePushService")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ApplePushService")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ApplePushService")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ApplePushService")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Intents")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Intents")::CreateInstance(Module)
 SwiftASTContextForModule("Intents")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Intents")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Intents")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MLAssetIO")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MLAssetIO")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MLAssetIO")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MLAssetIO")::RegisterSectionModules("MLAssetIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreDuetContext")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreDuetContext")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDuetContext")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Intents")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreDuetContext")::RegisterSectionModules("CoreDuetContext") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreDuet")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreDuet")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDuet")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreDuet")::RegisterSectionModules("CoreDuet") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreDuetDaemonProtocol")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ProactiveSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ProactiveSupport")::CreateInstance(Module)
 SwiftASTContextForModule("ProactiveSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ProactiveSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ProactiveSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ProactiveSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Rapport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Rapport")::CreateInstance(Module)
 SwiftASTContextForModule("Rapport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Rapport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Rapport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Rapport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CrashReporterSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CrashReporterSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CrashReporterSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CrashReporterSupport")::RegisterSectionModules("CrashReporterSupport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("OSAnalytics")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OSAnalytics")::CreateInstance(Module)
 SwiftASTContextForModule("OSAnalytics")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OSAnalytics")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OSAnalytics")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OSAnalytics")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreTelephony")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreTelephony")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreTelephony")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreTelephony")::RegisterSectionModules("CoreTelephony") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Intents")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Intents")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Intents")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Intents")::RegisterSectionModules("Intents") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ApplePushService")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ApplePushService")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ApplePushService")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ApplePushService")::RegisterSectionModules("ApplePushService") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Symbolication")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Symbolication")::CreateInstance(Module)
 SwiftASTContextForModule("Symbolication")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Symbolication")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Symbolication")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDuetDebugLogging")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Symbolication")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreDuetDebugLogging")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDuetDebugLogging")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreDuetDebugLogging")::RegisterSectionModules("CoreDuetDebugLogging") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ProactiveSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ProactiveSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ProactiveSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ProactiveSupport")::RegisterSectionModules("ProactiveSupport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreSymbolication")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreSymbolication")::CreateInstance(Module)
 SwiftASTContextForModule("CoreSymbolication")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreSymbolication")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreSymbolication")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreSymbolication")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreDuetDaemonProtocol")::RegisterSectionModules("CoreDuetDaemonProtocol") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("MallocStackLogging")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MallocStackLogging")::CreateInstance(Module)
 SwiftASTContextForModule("MallocStackLogging")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MallocStackLogging")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MallocStackLogging")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MallocStackLogging")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DebugSymbols")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DebugSymbols")::CreateInstance(Module)
 SwiftASTContextForModule("DebugSymbols")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DebugSymbols")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DebugSymbols")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DebugSymbols")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreUtilsExtras")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreUtilsExtras")::CreateInstance(Module)
 SwiftASTContextForModule("CoreUtilsExtras")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreUtilsExtras")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreUtilsExtras")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreUtilsExtras")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CommonUtilities")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CommonUtilities")::CreateInstance(Module)
 SwiftASTContextForModule("CommonUtilities")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CommonUtilities")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CommonUtilities")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CommonUtilities")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Rapport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Rapport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Rapport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Rapport")::RegisterSectionModules("Rapport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libTelephonyUtilDynamic.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("OSAnalytics")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OSAnalytics")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OSAnalytics")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OSAnalytics")::RegisterSectionModules("OSAnalytics") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Bom")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Bom")::CreateInstance(Module)
 SwiftASTContextForModule("Bom")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Bom")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Bom")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Bom")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Symbolication")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Symbolication")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Symbolication")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Symbolication")::RegisterSectionModules("Symbolication") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CommonUtilities")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CommonUtilities")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CommonUtilities")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CommonUtilities")::RegisterSectionModules("CommonUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreSymbolication")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreSymbolication")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreSymbolication")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreSymbolication")::RegisterSectionModules("CoreSymbolication") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libParallelCompression.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libParallelCompression.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libParallelCompression.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libParallelCompression.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libParallelCompression.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libParallelCompression.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreUtilsExtras")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreUtilsExtras")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreUtilsExtras")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreUtilsExtras")::RegisterSectionModules("CoreUtilsExtras") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MallocStackLogging")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MallocStackLogging")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MallocStackLogging")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MallocStackLogging")::RegisterSectionModules("MallocStackLogging") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DebugSymbols")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DebugSymbols")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DebugSymbols")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 TypeSystemSwiftTypeRef("CoreDaemon")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DebugSymbols")::RegisterSectionModules("DebugSymbols") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreDaemon")::CreateInstance(Module)
 SwiftASTContextForModule("CoreDaemon")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreDaemon")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreDaemon")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("AppleSRP")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleSRP")::CreateInstance(Module)
 SwiftASTContextForModule("AppleSRP")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleSRP")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleSRP")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDaemon")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleSRP")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ServiceManagement")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ServiceManagement")::CreateInstance(Module)
 SwiftASTContextForModule("ServiceManagement")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ServiceManagement")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ServiceManagement")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ServiceManagement")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("UserManagement")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("UserManagement")::CreateInstance(Module)
 SwiftASTContextForModule("UserManagement")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("UserManagement")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("UserManagement")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("UserManagement")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Accounts")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Accounts")::CreateInstance(Module)
 SwiftASTContextForModule("Accounts")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Accounts")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Accounts")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Accounts")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libTelephonyUtilDynamic.dylib")::RegisterSectionModules("libTelephonyUtilDynamic.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Bom")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Bom")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Bom")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Bom")::RegisterSectionModules("Bom") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("C2")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("C2")::CreateInstance(Module)
 SwiftASTContextForModule("C2")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("C2")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("C2")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("C2")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreLocation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreLocation")::CreateInstance(Module)
 SwiftASTContextForModule("CoreLocation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreLocation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreLocation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreLocation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleSRP")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleSRP")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleSRP")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleSRP")::RegisterSectionModules("AppleSRP") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ServiceManagement")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ServiceManagement")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ServiceManagement")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ServiceManagement")::RegisterSectionModules("ServiceManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreDaemon")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("CloudKitDistributedSync")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CloudKitDistributedSync")::CreateInstance(Module)
 SwiftASTContextForModule("CloudKitDistributedSync")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CloudKitDistributedSync")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CloudKitDistributedSync")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreDaemon")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreDaemon")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreDaemon")::RegisterSectionModules("CoreDaemon") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CloudKitDistributedSync")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libParallelCompression.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libParallelCompression.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libParallelCompression.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libParallelCompression.dylib")::RegisterSectionModules("libParallelCompression.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Accounts")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Accounts")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Accounts")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Accounts")::RegisterSectionModules("Accounts") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("ProtectedCloudStorage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ProtectedCloudStorage")::CreateInstance(Module)
 SwiftASTContextForModule("ProtectedCloudStorage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ProtectedCloudStorage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ProtectedCloudStorage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ProtectedCloudStorage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("UserManagement")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("UserManagement")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("UserManagement")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("UserManagement")::RegisterSectionModules("UserManagement") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("PushKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PushKit")::CreateInstance(Module)
 SwiftASTContextForModule("PushKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PushKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PushKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("PushKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreTime")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreTime")::CreateInstance(Module)
 SwiftASTContextForModule("CoreTime")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreTime")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreTime")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("AuthKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AuthKit")::CreateInstance(Module)
 SwiftASTContextForModule("AuthKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AuthKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AuthKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreTime")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AuthKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("RTCReporting")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("RTCReporting")::CreateInstance(Module)
 SwiftASTContextForModule("RTCReporting")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RTCReporting")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RTCReporting")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RTCReporting")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("C2")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("C2")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("C2")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("C2")::RegisterSectionModules("C2") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CorePhoneNumbers")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CorePhoneNumbers")::CreateInstance(Module)
 SwiftASTContextForModule("CorePhoneNumbers")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CorePhoneNumbers")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CorePhoneNumbers")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CorePhoneNumbers")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreLocation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreLocation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreLocation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreLocation")::RegisterSectionModules("CoreLocation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("DiskManagement")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DiskManagement")::CreateInstance(Module)
 SwiftASTContextForModule("DiskManagement")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DiskManagement")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DiskManagement")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DiskManagement")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("ProtectedCloudStorage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ProtectedCloudStorage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ProtectedCloudStorage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ProtectedCloudStorage")::RegisterSectionModules("ProtectedCloudStorage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("PushKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PushKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PushKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PushKit")::RegisterSectionModules("PushKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AuthKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AuthKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AuthKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AuthKit")::RegisterSectionModules("AuthKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreTime")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreTime")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreTime")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreTime")::RegisterSectionModules("CoreTime") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("RTCReporting")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("AppleIDAuthSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleIDAuthSupport")::CreateInstance(Module)
 SwiftASTContextForModule("AppleIDAuthSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleIDAuthSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleIDAuthSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RTCReporting")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RTCReporting")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RTCReporting")::RegisterSectionModules("RTCReporting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppleIDAuthSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CloudKitDistributedSync")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("AAAFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AAAFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("CloudKitDistributedSync")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CloudKitDistributedSync")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AAAFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AAAFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AAAFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CloudKitDistributedSync")::RegisterSectionModules("CloudKitDistributedSync") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AAAFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("KeychainCircle")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("KeychainCircle")::CreateInstance(Module)
 SwiftASTContextForModule("KeychainCircle")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("KeychainCircle")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("KeychainCircle")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("KeychainCircle")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MediaKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MediaKit")::CreateInstance(Module)
 SwiftASTContextForModule("MediaKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MediaKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MediaKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MediaKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DiscRecording")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DiscRecording")::CreateInstance(Module)
 SwiftASTContextForModule("DiscRecording")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DiscRecording")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DiscRecording")::SetTriple("x86_64-apple-macosx10.14.0") setting to "x86_64-apple-macosx10.14.0"
 SwiftASTContextForModule("DiscRecording")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libCoreStorage.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCoreStorage.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCoreStorage.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCoreStorage.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCoreStorage.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCoreStorage.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CorePhoneNumbers")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CorePhoneNumbers")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CorePhoneNumbers")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CorePhoneNumbers")::RegisterSectionModules("CorePhoneNumbers") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcsfde.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcsfde.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcsfde.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcsfde.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcsfde.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcsfde.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("DiskManagement")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DiskManagement")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DiskManagement")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiskManagement")::RegisterSectionModules("DiskManagement") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("EFILogin")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("EFILogin")::CreateInstance(Module)
 SwiftASTContextForModule("EFILogin")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("EFILogin")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("EFILogin")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("EFILogin")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("KeychainCircle")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("KeychainCircle")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("KeychainCircle")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleIDAuthSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("KeychainCircle")::RegisterSectionModules("KeychainCircle") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AAAFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleIDAuthSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleIDAuthSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleIDAuthSupport")::RegisterSectionModules("AppleIDAuthSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AAAFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AAAFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AAAFoundation")::RegisterSectionModules("AAAFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MediaKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MediaKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MediaKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MediaKit")::RegisterSectionModules("MediaKit") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("OctagonTrust")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OctagonTrust")::CreateInstance(Module)
 SwiftASTContextForModule("DiscRecording")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCoreStorage.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("GeoServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GeoServices")::CreateInstance(Module)
 SwiftASTContextForModule("GeoServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GeoServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GeoServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCoreStorage.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCoreStorage.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCoreStorage.dylib")::RegisterSectionModules("libCoreStorage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GeoServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("LocationSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LocationSupport")::CreateInstance(Module)
 SwiftASTContextForModule("LocationSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LocationSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LocationSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LocationSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("DiscRecording")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DiscRecording")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiscRecording")::RegisterSectionModules("DiscRecording") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("OctagonTrust")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OctagonTrust")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OctagonTrust")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OctagonTrust")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreBluetooth")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreBluetooth")::CreateInstance(Module)
 SwiftASTContextForModule("CoreBluetooth")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreBluetooth")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreBluetooth")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreBluetooth")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("GeoServicesCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GeoServicesCore")::CreateInstance(Module)
 SwiftASTContextForModule("GeoServicesCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GeoServicesCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GeoServicesCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GeoServicesCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("PhoneNumbers")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PhoneNumbers")::CreateInstance(Module)
 SwiftASTContextForModule("PhoneNumbers")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PhoneNumbers")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PhoneNumbers")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("PhoneNumbers")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcsfde.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcsfde.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcsfde.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcsfde.dylib")::RegisterSectionModules("libcsfde.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("EFILogin")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("EFILogin")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("EFILogin")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("EFILogin")::RegisterSectionModules("EFILogin") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("RemoteServiceDiscovery")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("RemoteServiceDiscovery")::CreateInstance(Module)
 SwiftASTContextForModule("RemoteServiceDiscovery")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("RemoteServiceDiscovery")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("RemoteServiceDiscovery")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("RemoteServiceDiscovery")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("PlugInKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("PlugInKit")::CreateInstance(Module)
 SwiftASTContextForModule("PlugInKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("PlugInKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("PlugInKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("PlugInKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("GeoServicesCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OctagonTrust")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GeoServicesCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GeoServicesCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GeoServicesCore")::RegisterSectionModules("GeoServicesCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("OctagonTrust")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OctagonTrust")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OctagonTrust")::RegisterSectionModules("OctagonTrust") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreBluetooth")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreBluetooth")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreBluetooth")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreBluetooth")::RegisterSectionModules("CoreBluetooth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("LocationSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("IntentsFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LocationSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LocationSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IntentsFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("LocationSupport")::RegisterSectionModules("LocationSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IntentsFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IntentsFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IntentsFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IntentsFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("GeoServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GeoServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GeoServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GeoServices")::RegisterSectionModules("GeoServices") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("FrontBoardServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FrontBoardServices")::CreateInstance(Module)
 SwiftASTContextForModule("FrontBoardServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FrontBoardServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FrontBoardServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("FrontBoardServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("PhoneNumbers")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PhoneNumbers")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PhoneNumbers")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PhoneNumbers")::RegisterSectionModules("PhoneNumbers") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AssertionServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AssertionServices")::CreateInstance(Module)
 SwiftASTContextForModule("AssertionServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AssertionServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AssertionServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AssertionServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("BoardServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("BoardServices")::CreateInstance(Module)
 SwiftASTContextForModule("BoardServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("BoardServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("BoardServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("BoardServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("BackBoardServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("BackBoardServices")::CreateInstance(Module)
 SwiftASTContextForModule("BackBoardServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("BackBoardServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("BackBoardServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("BackBoardServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("InternationalTextSearch")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("InternationalTextSearch")::CreateInstance(Module)
 SwiftASTContextForModule("InternationalTextSearch")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("InternationalTextSearch")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("InternationalTextSearch")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("InternationalTextSearch")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("RemoteServiceDiscovery")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("RemoteServiceDiscovery")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("RemoteServiceDiscovery")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("RemoteServiceDiscovery")::RegisterSectionModules("RemoteServiceDiscovery") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("PlugInKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("PlugInKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("PlugInKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("PlugInKit")::RegisterSectionModules("PlugInKit") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("StreamingZip")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("StreamingZip")::CreateInstance(Module)
 SwiftASTContextForModule("StreamingZip")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("StreamingZip")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("StreamingZip")::SetTriple("x86_64-apple-macosx10.11.0") setting to "x86_64-apple-macosx10.11.0"
 SwiftASTContextForModule("StreamingZip")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MetalPerformanceShadersGraph")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::CreateInstance(Module)
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IntentsFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IntentsFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IntentsFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IntentsFoundation")::RegisterSectionModules("IntentsFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("BoardServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AssertionServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("ANECompiler")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ANECompiler")::CreateInstance(Module)
 SwiftASTContextForModule("FrontBoardServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ANECompiler")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ANECompiler")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ANECompiler")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("BoardServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("BoardServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("BoardServices")::RegisterSectionModules("BoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("FrontBoardServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FrontBoardServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ANECompiler")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("FrontBoardServices")::RegisterSectionModules("FrontBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AssertionServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AssertionServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AssertionServices")::RegisterSectionModules("AssertionServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("BackBoardServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("BackBoardServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("BackBoardServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("BackBoardServices")::RegisterSectionModules("BackBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AppleNeuralEngine")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleNeuralEngine")::CreateInstance(Module)
 SwiftASTContextForModule("AppleNeuralEngine")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleNeuralEngine")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleNeuralEngine")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libncurses.5.4.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libncurses.5.4.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("AppleNeuralEngine")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libncurses.5.4.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libncurses.5.4.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libncurses.5.4.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libncurses.5.4.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("InternationalTextSearch")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("ANEServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ANEServices")::CreateInstance(Module)
 SwiftASTContextForModule("ANEServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ANEServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ANEServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("InternationalTextSearch")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("InternationalTextSearch")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ANEServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("InternationalTextSearch")::RegisterSectionModules("InternationalTextSearch") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libsandbox.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libsandbox.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsandbox.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsandbox.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsandbox.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsandbox.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libMatch.1.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libMatch.1.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libMatch.1.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libMatch.1.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libMatch.1.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libMatch.1.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MetalPerformanceShadersGraph")::RegisterSectionModules("MetalPerformanceShadersGraph") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("StreamingZip")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("AppSupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("StreamingZip")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("StreamingZip")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppSupport")::CreateInstance(Module)
 SwiftASTContextForModule("StreamingZip")::RegisterSectionModules("StreamingZip") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AppSupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppSupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppSupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppSupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AVFCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AVFCore")::CreateInstance(Module)
 SwiftASTContextForModule("AVFCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AVFCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AVFCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AVFCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleNeuralEngine")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleNeuralEngine")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleNeuralEngine")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleNeuralEngine")::RegisterSectionModules("AppleNeuralEngine") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ANECompiler")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libncurses.5.4.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libncurses.5.4.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libncurses.5.4.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libncurses.5.4.dylib")::RegisterSectionModules("libncurses.5.4.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ANECompiler")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ANECompiler")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ANEServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ANECompiler")::RegisterSectionModules("ANECompiler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsandbox.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ANEServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ANEServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ANEServices")::RegisterSectionModules("ANEServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libsandbox.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsandbox.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsandbox.1.dylib")::RegisterSectionModules("libsandbox.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("AVFCapture")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AVFCapture")::CreateInstance(Module)
 SwiftASTContextForModule("AVFCapture")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AVFCapture")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AVFCapture")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AVFCapture")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("IOBluetooth")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IOBluetooth")::CreateInstance(Module)
 SwiftASTContextForModule("IOBluetooth")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IOBluetooth")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IOBluetooth")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IOBluetooth")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AudioUnit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AudioUnit")::CreateInstance(Module)
 TypeSystemSwiftTypeRef("AirPlaySync")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AudioUnit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("MediaToolbox")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AirPlaySync")::CreateInstance(Module)
 SwiftASTContextForModule("AirPlaySync")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AirPlaySync")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AirPlaySync")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AudioUnit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AirPlaySync")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MediaToolbox")::CreateInstance(Module)
 SwiftASTContextForModule("MediaToolbox")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MediaToolbox")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MediaToolbox")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MediaToolbox")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libMatch.1.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libMatch.1.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libMatch.1.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libMatch.1.dylib")::RegisterSectionModules("libMatch.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreAVCHD")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreAVCHD")::CreateInstance(Module)
 SwiftASTContextForModule("CoreAVCHD")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreAVCHD")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreAVCHD")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAVCHD")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppSupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppSupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppSupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppSupport")::RegisterSectionModules("AppSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AVFCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AVFCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AVFCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AVFCore")::RegisterSectionModules("AVFCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Mangrove")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Mangrove")::CreateInstance(Module)
 SwiftASTContextForModule("Mangrove")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Mangrove")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Mangrove")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Mangrove")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AlgosScoreFramework")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AlgosScoreFramework")::CreateInstance(Module)
 SwiftASTContextForModule("AlgosScoreFramework")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AlgosScoreFramework")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AlgosScoreFramework")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AlgosScoreFramework")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AVFCapture")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AVFCapture")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AVFCapture")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AVFCapture")::RegisterSectionModules("AVFCapture") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AudioUnit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AudioUnit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AudioUnit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AudioUnit")::RegisterSectionModules("AudioUnit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IOBluetooth")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOBluetooth")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IOBluetooth")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AirPlaySync")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IOBluetooth")::RegisterSectionModules("IOBluetooth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AirPlaySync")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AirPlaySync")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AirPlaySync")::RegisterSectionModules("AirPlaySync") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CMPhoto")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CMPhoto")::CreateInstance(Module)
 SwiftASTContextForModule("CMPhoto")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CMPhoto")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CMPhoto")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CMPhoto")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("AppleVPA")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("AppleVPA")::CreateInstance(Module)
 SwiftASTContextForModule("AppleVPA")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("AppleVPA")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("AppleVPA")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("AppleVPA")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreAUC")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreAUC")::CreateInstance(Module)
 SwiftASTContextForModule("CoreAUC")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreAUC")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreAUC")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreAUC")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CMImaging")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CMImaging")::CreateInstance(Module)
 SwiftASTContextForModule("CMImaging")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CMImaging")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CMImaging")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CMImaging")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("MediaToolbox")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MediaToolbox")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MediaToolbox")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MediaToolbox")::RegisterSectionModules("MediaToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreAVCHD")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreAVCHD")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreAVCHD")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreAVCHD")::RegisterSectionModules("CoreAVCHD") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Quagga")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Quagga")::CreateInstance(Module)
 SwiftASTContextForModule("Quagga")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Quagga")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Quagga")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Quagga")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CMCapture")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CMCapture")::CreateInstance(Module)
 SwiftASTContextForModule("CMCapture")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CMCapture")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CMCapture")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CMCapture")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Mangrove")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Mangrove")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Mangrove")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Mangrove")::RegisterSectionModules("Mangrove") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("AlgosScoreFramework")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("CoreMediaIO")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreMediaIO")::CreateInstance(Module)
 SwiftASTContextForModule("AlgosScoreFramework")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AlgosScoreFramework")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AlgosScoreFramework")::RegisterSectionModules("AlgosScoreFramework") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreMediaIO")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreMediaIO")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreMediaIO")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreMediaIO")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Sharing")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Sharing")::CreateInstance(Module)
 SwiftASTContextForModule("Sharing")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Sharing")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Sharing")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Sharing")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("AppleVPA")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("AppleVPA")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("AppleVPA")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("AppleVPA")::RegisterSectionModules("AppleVPA") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CMPhoto")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CMPhoto")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CMPhoto")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CMPhoto")::RegisterSectionModules("CMPhoto") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreAUC")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreAUC")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreAUC")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreAUC")::RegisterSectionModules("CoreAUC") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CMImaging")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CMImaging")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CMImaging")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CMImaging")::RegisterSectionModules("CMImaging") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IDS")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IDS")::CreateInstance(Module)
 SwiftASTContextForModule("IDS")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IDS")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IDS")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IDS")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Apple80211")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Apple80211")::CreateInstance(Module)
 SwiftASTContextForModule("Apple80211")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Apple80211")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Apple80211")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Apple80211")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreWLAN")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreWLAN")::CreateInstance(Module)
 SwiftASTContextForModule("CoreWLAN")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreWLAN")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreWLAN")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreWLAN")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CoreWiFi")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreWiFi")::CreateInstance(Module)
 SwiftASTContextForModule("CoreWiFi")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreWiFi")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreWiFi")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreWiFi")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Quagga")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Quagga")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Quagga")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Quagga")::RegisterSectionModules("Quagga") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CMCapture")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CMCapture")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CMCapture")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CMCapture")::RegisterSectionModules("CMCapture") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IMFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IMFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("IMFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IMFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IMFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IMFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Marco")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Marco")::CreateInstance(Module)
 SwiftASTContextForModule("Marco")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Marco")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Marco")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Marco")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreMediaIO")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreMediaIO")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreMediaIO")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreMediaIO")::RegisterSectionModules("CoreMediaIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Sharing")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Sharing")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Sharing")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Sharing")::RegisterSectionModules("Sharing") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("IDSFoundation")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("IDSFoundation")::CreateInstance(Module)
 SwiftASTContextForModule("IDSFoundation")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("IDSFoundation")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("IDSFoundation")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("IDSFoundation")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("FTServices")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FTServices")::CreateInstance(Module)
 SwiftASTContextForModule("FTServices")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FTServices")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FTServices")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("FTServices")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IDS")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IDS")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IDS")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IDS")::RegisterSectionModules("IDS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreWLAN")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Apple80211")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreWiFi")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreWLAN")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreWLAN")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreWLAN")::RegisterSectionModules("CoreWLAN") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Apple80211")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Apple80211")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreWiFi")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreWiFi")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Apple80211")::RegisterSectionModules("Apple80211") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreWiFi")::RegisterSectionModules("CoreWiFi") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Engram")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Engram")::CreateInstance(Module)
 SwiftASTContextForModule("Engram")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Engram")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Engram")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Engram")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libtidy.A.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libtidy.A.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libtidy.A.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libtidy.A.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libtidy.A.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libtidy.A.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("FTAWD")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FTAWD")::CreateInstance(Module)
 SwiftASTContextForModule("FTAWD")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FTAWD")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FTAWD")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("FTAWD")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("Carbon")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Carbon")::CreateInstance(Module)
 SwiftASTContextForModule("Carbon")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Carbon")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Carbon")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Carbon")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("IMFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IMFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IMFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IMFoundation")::RegisterSectionModules("IMFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Marco")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Marco")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Marco")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Marco")::RegisterSectionModules("Marco") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SystemAdministration")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SystemAdministration")::CreateInstance(Module)
 SwiftASTContextForModule("SystemAdministration")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SystemAdministration")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SystemAdministration")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SystemAdministration")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("WebKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WebKit")::CreateInstance(Module)
 SwiftASTContextForModule("WebKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("WebKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("WebKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("WebKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("FTServices")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FTServices")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FTServices")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FTServices")::RegisterSectionModules("FTServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("IDSFoundation")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("IDSFoundation")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("IDSFoundation")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("IDSFoundation")::RegisterSectionModules("IDSFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Cocoa")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Cocoa")::CreateInstance(Module)
 SwiftASTContextForModule("Cocoa")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Cocoa")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Cocoa")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Cocoa")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CommonPanels")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CommonPanels")::CreateInstance(Module)
 SwiftASTContextForModule("CommonPanels")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CommonPanels")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CommonPanels")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CommonPanels")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libtidy.A.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libtidy.A.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libtidy.A.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libtidy.A.dylib")::RegisterSectionModules("libtidy.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("FTAWD")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Engram")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FTAWD")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FTAWD")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FTAWD")::RegisterSectionModules("FTAWD") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Engram")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Engram")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Engram")::RegisterSectionModules("Engram") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Carbon")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Carbon")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Carbon")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Carbon")::RegisterSectionModules("Carbon") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Help")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Help")::CreateInstance(Module)
 SwiftASTContextForModule("Help")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Help")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Help")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Help")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ImageCapture")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ImageCapture")::CreateInstance(Module)
 SwiftASTContextForModule("ImageCapture")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ImageCapture")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ImageCapture")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ImageCapture")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("OpenScripting")::TypeSystemSwiftTypeRef()
 TypeSystemSwiftTypeRef("Ink")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("OpenScripting")::CreateInstance(Module)
 SwiftASTContextForModule("OpenScripting")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("OpenScripting")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("OpenScripting")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("OpenScripting")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Ink")::CreateInstance(Module)
 SwiftASTContextForModule("Ink")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Ink")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Ink")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Ink")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SystemAdministration")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SystemAdministration")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SystemAdministration")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SystemAdministration")::RegisterSectionModules("SystemAdministration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("WebKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WebKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WebKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("WebKit")::RegisterSectionModules("WebKit") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("Print")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("Print")::CreateInstance(Module)
 SwiftASTContextForModule("Print")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("Print")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("Print")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("Print")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("SecurityHI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SecurityHI")::CreateInstance(Module)
 SwiftASTContextForModule("SecurityHI")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SecurityHI")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SecurityHI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SecurityHI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Cocoa")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Cocoa")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Cocoa")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Cocoa")::RegisterSectionModules("Cocoa") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CommonPanels")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CommonPanels")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CommonPanels")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CommonPanels")::RegisterSectionModules("CommonPanels") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("login")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("login")::CreateInstance(Module)
 SwiftASTContextForModule("login")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("login")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("login")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("login")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("DirectoryService")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DirectoryService")::CreateInstance(Module)
 SwiftASTContextForModule("DirectoryService")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DirectoryService")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DirectoryService")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DirectoryService")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("Ink")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Ink")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Ink")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Ink")::RegisterSectionModules("Ink") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Help")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Help")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Help")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Help")::RegisterSectionModules("Help") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SecurityHI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("Print")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SecurityHI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SecurityHI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SecurityHI")::RegisterSectionModules("SecurityHI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("Print")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("Print")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("Print")::RegisterSectionModules("Print") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ImageCapture")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ImageCapture")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ImageCapture")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ImageCapture")::RegisterSectionModules("ImageCapture") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("OpenScripting")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("OpenScripting")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("OpenScripting")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("OpenScripting")::RegisterSectionModules("OpenScripting") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("DiskImages")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DiskImages")::CreateInstance(Module)
 SwiftASTContextForModule("DiskImages")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DiskImages")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DiskImages")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("LoginUICore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DiskImages")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libodfde.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libodfde.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("LoginUICore")::CreateInstance(Module)
 SwiftASTContextForModule("libodfde.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libodfde.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libodfde.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LoginUICore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LoginUICore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LoginUICore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libodfde.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("loginsupport")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("loginsupport")::CreateInstance(Module)
 SwiftASTContextForModule("LoginUICore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("loginsupport")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("loginsupport")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("loginsupport")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("loginsupport")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libcurl.4.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcurl.4.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcurl.4.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcurl.4.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcurl.4.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("libcrypto.46.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcurl.4.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libcrypto.46.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcrypto.46.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcrypto.46.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcrypto.46.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcrypto.46.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("login")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("login")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("login")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("login")::RegisterSectionModules("login") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DirectoryService")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DirectoryService")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DirectoryService")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DirectoryService")::RegisterSectionModules("DirectoryService") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libssl.48.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libssl.48.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libssl.48.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libssl.48.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libssl.48.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libssl.48.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("LDAP")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("LDAP")::CreateInstance(Module)
 SwiftASTContextForModule("LDAP")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("LDAP")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("LDAP")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LDAP")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libodfde.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DiskImages")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libodfde.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libodfde.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiskImages")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DiskImages")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DiskImages")::RegisterSectionModules("DiskImages") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libodfde.dylib")::RegisterSectionModules("libodfde.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("TrustEvaluationAgent")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("TrustEvaluationAgent")::CreateInstance(Module)
 SwiftASTContextForModule("TrustEvaluationAgent")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("TrustEvaluationAgent")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 TypeSystemSwiftTypeRef("libsasl2.2.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcurl.4.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcurl.4.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcurl.4.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcurl.4.dylib")::RegisterSectionModules("libcurl.4.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("TrustEvaluationAgent")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("TrustEvaluationAgent")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsasl2.2.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libsasl2.2.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libsasl2.2.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libsasl2.2.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libsasl2.2.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("loginsupport")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("loginsupport")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("loginsupport")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("loginsupport")::RegisterSectionModules("loginsupport") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("WebKitLegacy")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WebKitLegacy")::CreateInstance(Module)
 SwiftASTContextForModule("WebKitLegacy")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("WebKitLegacy")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("WebKitLegacy")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("LoginUICore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WebKitLegacy")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("LoginUICore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LoginUICore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("LoginUICore")::RegisterSectionModules("LoginUICore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcrypto.46.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcrypto.46.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcrypto.46.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcrypto.46.dylib")::RegisterSectionModules("libcrypto.46.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("WebCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WebCore")::CreateInstance(Module)
 SwiftASTContextForModule("WebCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("WebCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("WebCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("WebCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CorePrediction")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CorePrediction")::CreateInstance(Module)
 SwiftASTContextForModule("CorePrediction")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CorePrediction")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CorePrediction")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CorePrediction")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libnetworkextension.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libnetworkextension.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libnetworkextension.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libnetworkextension.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libnetworkextension.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libnetworkextension.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libssl.48.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libssl.48.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libssl.48.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libssl.48.dylib")::RegisterSectionModules("libssl.48.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("LDAP")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("LDAP")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("LDAP")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("LDAP")::RegisterSectionModules("LDAP") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libwebrtc.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libwebrtc.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libwebrtc.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libwebrtc.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libwebrtc.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libwebrtc.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("SafariSafeBrowsing")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SafariSafeBrowsing")::CreateInstance(Module)
 SwiftASTContextForModule("SafariSafeBrowsing")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SafariSafeBrowsing")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SafariSafeBrowsing")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SafariSafeBrowsing")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libsasl2.2.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libsasl2.2.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libsasl2.2.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libsasl2.2.dylib")::RegisterSectionModules("libsasl2.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SecurityInterface")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SecurityInterface")::CreateInstance(Module)
 SwiftASTContextForModule("SecurityInterface")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SecurityInterface")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SecurityInterface")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SecurityInterface")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("TrustEvaluationAgent")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WebKitLegacy")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("TrustEvaluationAgent")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("TrustEvaluationAgent")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("TrustEvaluationAgent")::RegisterSectionModules("TrustEvaluationAgent") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("WebKitLegacy")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WebKitLegacy")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("WebKitLegacy")::RegisterSectionModules("WebKitLegacy") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("URLFormatting")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("URLFormatting")::CreateInstance(Module)
 SwiftASTContextForModule("URLFormatting")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("URLFormatting")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("URLFormatting")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 TypeSystemSwiftTypeRef("WebInspectorUI")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WebInspectorUI")::CreateInstance(Module)
 SwiftASTContextForModule("URLFormatting")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("WebInspectorUI")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("WebInspectorUI")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CorePrediction")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CorePrediction")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CorePrediction")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CorePrediction")::RegisterSectionModules("CorePrediction") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("WebCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WebCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WebCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("WebCore")::RegisterSectionModules("WebCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("JavaScriptCore")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("JavaScriptCore")::CreateInstance(Module)
 SwiftASTContextForModule("JavaScriptCore")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("JavaScriptCore")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("JavaScriptCore")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("JavaScriptCore")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libANGLE-shared.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libANGLE-shared.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libANGLE-shared.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libANGLE-shared.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libANGLE-shared.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libnetworkextension.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libANGLE-shared.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libnetworkextension.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libnetworkextension.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libnetworkextension.dylib")::RegisterSectionModules("libnetworkextension.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("NetworkExtension")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("NetworkExtension")::CreateInstance(Module)
 SwiftASTContextForModule("NetworkExtension")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("NetworkExtension")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("NetworkExtension")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("NetworkExtension")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libwebrtc.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libwebrtc.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libwebrtc.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libwebrtc.dylib")::RegisterSectionModules("libwebrtc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SafariSafeBrowsing")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SafariSafeBrowsing")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SafariSafeBrowsing")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SafariSafeBrowsing")::RegisterSectionModules("SafariSafeBrowsing") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SceneKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SceneKit")::CreateInstance(Module)
 SwiftASTContextForModule("SceneKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SceneKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SceneKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SceneKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("CaptiveNetwork")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CaptiveNetwork")::CreateInstance(Module)
 SwiftASTContextForModule("CaptiveNetwork")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CaptiveNetwork")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CaptiveNetwork")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CaptiveNetwork")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("WebInspectorUI")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WebInspectorUI")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WebInspectorUI")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("WebInspectorUI")::RegisterSectionModules("WebInspectorUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("SecurityInterface")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SecurityInterface")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SecurityInterface")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SecurityInterface")::RegisterSectionModules("SecurityInterface") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("EAP8021X")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("EAP8021X")::CreateInstance(Module)
 SwiftASTContextForModule("EAP8021X")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("EAP8021X")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("EAP8021X")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("EAP8021X")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("URLFormatting")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("URLFormatting")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("URLFormatting")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("URLFormatting")::RegisterSectionModules("URLFormatting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libANGLE-shared.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libANGLE-shared.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libANGLE-shared.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libANGLE-shared.dylib")::RegisterSectionModules("libANGLE-shared.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("ModelIO")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ModelIO")::CreateInstance(Module)
 SwiftASTContextForModule("ModelIO")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ModelIO")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ModelIO")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ModelIO")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("MetalKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("MetalKit")::CreateInstance(Module)
 SwiftASTContextForModule("MetalKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("MetalKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("MetalKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("MetalKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("JavaScriptCore")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("JavaScriptCore")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("JavaScriptCore")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("JavaScriptCore")::RegisterSectionModules("JavaScriptCore") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("GLKit")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GLKit")::CreateInstance(Module)
 SwiftASTContextForModule("GLKit")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GLKit")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GLKit")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GLKit")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("NetworkExtension")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("NetworkExtension")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("NetworkExtension")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("NetworkExtension")::RegisterSectionModules("NetworkExtension") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreOptimization")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreOptimization")::CreateInstance(Module)
 SwiftASTContextForModule("CoreOptimization")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreOptimization")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreOptimization")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreOptimization")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("WirelessDiagnostics")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("WirelessDiagnostics")::CreateInstance(Module)
 SwiftASTContextForModule("SceneKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WirelessDiagnostics")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("WirelessDiagnostics")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("WirelessDiagnostics")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SceneKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SceneKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SceneKit")::RegisterSectionModules("SceneKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("WirelessDiagnostics")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libAWDSupportFramework.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CaptiveNetwork")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CaptiveNetwork")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CaptiveNetwork")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CaptiveNetwork")::RegisterSectionModules("CaptiveNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libAWDSupport.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libAWDSupport.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libAWDSupport.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libAWDSupport.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libAWDSupport.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libAWDSupport.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("EAP8021X")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("EAP8021X")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("EAP8021X")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("EAP8021X")::RegisterSectionModules("EAP8021X") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("MetalKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("MetalKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("MetalKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("MetalKit")::RegisterSectionModules("MetalKit") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libprotobuf-lite.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libprotobuf-lite.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libprotobuf-lite.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libprotobuf-lite.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libprotobuf-lite.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libprotobuf-lite.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("ModelIO")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ModelIO")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ModelIO")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ModelIO")::RegisterSectionModules("ModelIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("GLKit")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 TypeSystemSwiftTypeRef("libprotobuf.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libprotobuf.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libprotobuf.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libprotobuf.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libprotobuf.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GLKit")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GLKit")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GLKit")::RegisterSectionModules("GLKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libprotobuf.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("CoreOptimization")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreOptimization")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreOptimization")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreOptimization")::RegisterSectionModules("CoreOptimization") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("CoreServicesInternal")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("CoreServicesInternal")::CreateInstance(Module)
 SwiftASTContextForModule("CoreServicesInternal")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("CoreServicesInternal")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("CoreServicesInternal")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("CoreServicesInternal")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("FileProvider")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("FileProvider")::CreateInstance(Module)
 SwiftASTContextForModule("FileProvider")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("FileProvider")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("FileProvider")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("FileProvider")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("GenerationalStorage")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("GenerationalStorage")::CreateInstance(Module)
 SwiftASTContextForModule("GenerationalStorage")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("GenerationalStorage")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("GenerationalStorage")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("GenerationalStorage")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("WirelessDiagnostics")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("WirelessDiagnostics")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("WirelessDiagnostics")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("WirelessDiagnostics")::RegisterSectionModules("WirelessDiagnostics") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("SymptomDiagnosticReporter")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("SymptomDiagnosticReporter")::CreateInstance(Module)
 SwiftASTContextForModule("SymptomDiagnosticReporter")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("SymptomDiagnosticReporter")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("SymptomDiagnosticReporter")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("SymptomDiagnosticReporter")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libAWDSupportFramework.dylib")::RegisterSectionModules("libAWDSupportFramework.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libAWDSupport.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libAWDSupport.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libAWDSupport.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libAWDSupport.dylib")::RegisterSectionModules("libAWDSupport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("DesktopServicesPriv")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("DesktopServicesPriv")::CreateInstance(Module)
 SwiftASTContextForModule("DesktopServicesPriv")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("DesktopServicesPriv")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("DesktopServicesPriv")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("DesktopServicesPriv")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("NetAuth")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("NetAuth")::CreateInstance(Module)
 SwiftASTContextForModule("NetAuth")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("NetAuth")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("NetAuth")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("NetAuth")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("libprotobuf.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libprotobuf.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libprotobuf.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libprotobuf.dylib")::RegisterSectionModules("libprotobuf.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libprotobuf-lite.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("FileProvider")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libprotobuf-lite.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libprotobuf-lite.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libprotobuf-lite.dylib")::RegisterSectionModules("libprotobuf-lite.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("FileProvider")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("FileProvider")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("FileProvider")::RegisterSectionModules("FileProvider") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("CoreServicesInternal")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("CoreServicesInternal")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("CoreServicesInternal")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("CoreServicesInternal")::RegisterSectionModules("CoreServicesInternal") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libcmark-gfm.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libcmark-gfm.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libcmark-gfm.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libcmark-gfm.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libcmark-gfm.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libcmark-gfm.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("libCGInterfaces.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libCGInterfaces.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libCGInterfaces.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libCGInterfaces.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libCGInterfaces.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libCGInterfaces.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 TypeSystemSwiftTypeRef("ViewBridge")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("ViewBridge")::CreateInstance(Module)
 SwiftASTContextForModule("ViewBridge")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("ViewBridge")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("ViewBridge")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("ViewBridge")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("GenerationalStorage")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("GenerationalStorage")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("GenerationalStorage")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("GenerationalStorage")::RegisterSectionModules("GenerationalStorage") retrieved 0 AST Data blobs from the symbol vendor.
 TypeSystemSwiftTypeRef("libobjc-trampolines.dylib")::TypeSystemSwiftTypeRef()
 SwiftASTContextForModule("libobjc-trampolines.dylib")::CreateInstance(Module)
 SwiftASTContextForModule("libobjc-trampolines.dylib")::DeserializeAllCompilerFlags() -- Found 0 AST file data entries.
 SwiftASTContextForModule("libobjc-trampolines.dylib")::CreateInstance() -- Serialized/default triple would have been x86_64-apple-macosx12.0.
 SwiftASTContextForModule("libobjc-trampolines.dylib")::SetTriple("x86_64-apple-macosx12.3.0") setting to "x86_64-apple-macosx12.3.0"
 SwiftASTContextForModule("libobjc-trampolines.dylib")::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForModule("SymptomDiagnosticReporter")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("SymptomDiagnosticReporter")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("SymptomDiagnosticReporter")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("SymptomDiagnosticReporter")::RegisterSectionModules("SymptomDiagnosticReporter") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("NetAuth")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("NetAuth")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("NetAuth")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("NetAuth")::RegisterSectionModules("NetAuth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("DesktopServicesPriv")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("DesktopServicesPriv")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("DesktopServicesPriv")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("DesktopServicesPriv")::RegisterSectionModules("DesktopServicesPriv") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("ViewBridge")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("ViewBridge")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("ViewBridge")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("ViewBridge")::RegisterSectionModules("ViewBridge") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libcmark-gfm.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libCGInterfaces.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libcmark-gfm.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libcmark-gfm.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libcmark-gfm.dylib")::RegisterSectionModules("libcmark-gfm.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libCGInterfaces.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libCGInterfaces.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libCGInterfaces.dylib")::RegisterSectionModules("libCGInterfaces.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForModule("libobjc-trampolines.dylib")::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForModule("libobjc-trampolines.dylib")::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForModule("libobjc-trampolines.dylib")::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForModule("libobjc-trampolines.dylib")::RegisterSectionModules("libobjc-trampolines.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::CreateInstance() -- Fully specified target triple x86_64-apple-macosx11.0.0.
 SwiftASTContextForExpressions::SetTriple("x86_64-apple-macosx11.0.0") setting to "x86_64-apple-macosx11.0.0"
 SwiftASTContextForExpressions::ProcessModule("ClassROTPointerAuth")::DeserializeAllCompilerFlags() -- Found 1 AST file data entries.
 SwiftASTContextForExpressions::ProcessModule("ClassROTPointerAuth")::DeserializeAllCompilerFlags() -- SDK path from module "ClassROTPointerAuth" was "".
 SwiftASTContextForExpressions::ProcessModule("AppKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/AppKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("UIFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/UIFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RemoteViewServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RemoteViewServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("XCTTargetBootstrap")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/XCTTargetBootstrap.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("InternationalSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/InternationalSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("UserActivity")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/UserActivity.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("UniformTypeIdentifiers")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/UniformTypeIdentifiers.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreAnalytics")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreAnalytics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreAutoLayout")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreAutoLayout.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreData")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreData.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Metal")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Metal.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreSVG")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreSVG.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SkyLight")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SkyLight.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreGraphics")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreGraphics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Accelerate")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IconServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IconServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOSurface")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/IOSurface.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ApplicationServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DFRFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DFRFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AudioToolbox")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/AudioToolbox.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DataDetectorsCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DataDetectorsCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("TextInput")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/TextInput.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Foundation")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Foundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("HIToolbox")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("QuartzCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/QuartzCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Security")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Security.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SpeechRecognition")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreUI")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreUI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreAudio")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreAudio.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DiskArbitration")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/DiskArbitration.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MultitouchSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MultitouchSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/IOKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PerformanceAnalysis")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/PerformanceAnalysis.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OpenGL")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MobileKeyBag")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MobileKeyBag.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ColorSync")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ColorSync.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreFoundation")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreImage")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreImage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreText")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreText.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ImageIO")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SoftLinking")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SoftLinking.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("TextureIO")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/TextureIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SystemConfiguration")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/SystemConfiguration.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CFNetwork")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CFNetwork.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleSystemInfo")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleSystemInfo.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOMobileFramebuffer")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleFSCompression")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleFSCompression.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FSEvents")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CarbonCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Metadata")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OSServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SearchKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AE")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LaunchServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DictionaryServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SharedFileList")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("TCC")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/TCC.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreNLP")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreNLP.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MetadataUtilities")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MetadataUtilities.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("vImage")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("vecLib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libvMisc.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libvDSP.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libBLAS.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libLAPACK.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libLinearAlgebra.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libSparseBLAS.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libQuadrature.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libBNNS.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libSparse.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LinguisticData")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/LinguisticData.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Lexicon")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Lexicon.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LanguageModeling")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/LanguageModeling.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleSauce")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleSauce.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreEmoji")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreEmoji.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CFOpenDirectory")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OpenDirectory")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenDirectory.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("APFS")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/APFS.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SecurityFoundation")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/SecurityFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreServicesStore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreServicesStore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("BackgroundTaskManagement")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libRadiance.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libJPEG.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libPng.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libTIFF.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGIF.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libJP2.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ImageIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleJPEG")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleJPEG.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libFontParser.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FontServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RunningBoardServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RunningBoardServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOSurfaceAccelerator")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WatchdogClient")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WatchdogClient.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDisplay")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreDisplay.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreMedia")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreMedia.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOAccelerator")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IOAccelerator.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreVideo")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreVideo.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MetalPerformanceShaders")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("VideoToolbox")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/VideoToolbox.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("BaseBoard")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/BaseBoard.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ProtocolBuffer")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ProtocolBuffer.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GPUWrangler")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GPUWrangler.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOPresentment")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IOPresentment.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DSExternalDisplay")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DSExternalDisplay.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libCoreFSCache.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGPUCompilerUtils.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GPUCompiler.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CMCaptureCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CMCaptureCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppServerSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppServerSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("perfdata")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/perfdata.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AudioToolboxCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AudioToolboxCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("caulk")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/caulk.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SystemPolicy")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SystemPolicy.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreMIDI")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreMIDI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OSAServicesClient")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/OSAServicesClient.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGLU.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGFXShared.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGL.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libGLImage.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libCVMSPluginSupport.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libCoreVMClient.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenGL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSImage")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSNeuralNetwork")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSMatrix")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSRayIntersector")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSNDArray")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MPSFunctions")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MetalTools")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MetalTools.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AggregateDictionary")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AggregateDictionary.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OpenCL")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/OpenCL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FaceCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FaceCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GraphVisualizer")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GraphVisualizer.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FontServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FontServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OTSVG")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/OTSVG.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libFontRegistry.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libhvf.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FontServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libXTFontStaticRegistryData.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FontServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleVA")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleVA.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ATS")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("HIServices")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PrintCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("QD")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ColorSyncLegacy")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SpeechSynthesis")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ATSUI")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Kerberos")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Kerberos.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GSS")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/GSS.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Heimdal")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Heimdal.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libHeimdalProxy.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Kerberos.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Network")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Network.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CommonAuth")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CommonAuth.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AudioSession")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AudioSession.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MediaExperience")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MediaExperience.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libSessionUtility.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AudioSession.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AudioResourceArbitration")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AudioResourceArbitration.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PowerLog")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/PowerLog.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IconFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IconFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SpeechRecognitionCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SpeechRecognitionCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SwiftUI")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/SwiftUI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Accessibility")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accessibility.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreMaterial")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreMaterial.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RenderBox")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RenderBox.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AttributeGraph")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AttributeGraph.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Combine")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Combine.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreGlyphs")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreGlyphs.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreUtils")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreUtils.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IntlPreferences")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IntlPreferences.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RecapPerformanceTesting")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RecapPerformanceTesting.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AXMediaUtilities")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AXMediaUtilities.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AccessibilitySharedSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AXCoreUtilities")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AXCoreUtilities.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("NaturalLanguage")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/NaturalLanguage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AXAssetLoader")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AXAssetLoader.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Espresso")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Espresso.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MediaAccessibility")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MediaAccessibility.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MobileAsset")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MobileAsset.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreML")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreML.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AVFoundation")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/AVFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AVFAudio")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/AVFAudio.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Montreal")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Montreal.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DuetActivityScheduler")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DuetActivityScheduler.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MLCompute")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MLCompute.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CloudKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CloudKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MIL")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MIL.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MLAssetIO")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MLAssetIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDuet")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreDuet.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDuetContext")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreDuetContext.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CrashReporterSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CrashReporterSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreTelephony")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreTelephony.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDuetDebugLogging")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ApplePushService")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ApplePushService.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Intents")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Intents.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDuetDaemonProtocol")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ProactiveSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ProactiveSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Rapport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Rapport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OSAnalytics")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/OSAnalytics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Symbolication")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Symbolication.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreSymbolication")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreSymbolication.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MallocStackLogging")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MallocStackLogging.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DebugSymbols")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DebugSymbols.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreUtilsExtras")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreUtilsExtras.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CommonUtilities")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CommonUtilities.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Bom")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Bom.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreDaemon")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreDaemon.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleSRP")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleSRP.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ServiceManagement")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ServiceManagement.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("UserManagement")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/UserManagement.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Accounts")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accounts.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("C2")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/C2.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreLocation")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreLocation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CloudKitDistributedSync")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CloudKitDistributedSync.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ProtectedCloudStorage")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ProtectedCloudStorage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PushKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/PushKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreTime")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreTime.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AuthKit")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AuthKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RTCReporting")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RTCReporting.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CorePhoneNumbers")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CorePhoneNumbers.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DiskManagement")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DiskManagement.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleIDAuthSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleIDAuthSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AAAFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AAAFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("KeychainCircle")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/KeychainCircle.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MediaKit")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/MediaKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DiscRecording")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/DiscRecording.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("EFILogin")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/EFILogin.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OctagonTrust")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/OctagonTrust.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GeoServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GeoServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LocationSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/LocationSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreBluetooth")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreBluetooth.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GeoServicesCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GeoServicesCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PhoneNumbers")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/PhoneNumbers.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("RemoteServiceDiscovery")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("PlugInKit")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/PlugInKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IntentsFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IntentsFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FrontBoardServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FrontBoardServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AssertionServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AssertionServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("BoardServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/BoardServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("BackBoardServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/BackBoardServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("InternationalTextSearch")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/InternationalTextSearch.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("StreamingZip")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/StreamingZip.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MetalPerformanceShadersGraph")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalPerformanceShadersGraph.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ANECompiler")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ANECompiler.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleNeuralEngine")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleNeuralEngine.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ANEServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ANEServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppSupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AVFCore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AVFCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AVFCapture")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AVFCapture.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IOBluetooth")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/IOBluetooth.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AudioUnit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/AudioUnit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AirPlaySync")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AirPlaySync.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MediaToolbox")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MediaToolbox.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreAVCHD")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreAVCHD.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Mangrove")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Mangrove.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AlgosScoreFramework")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AlgosScoreFramework.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CMPhoto")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CMPhoto.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("AppleVPA")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/AppleVPA.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreAUC")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreAUC.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CMImaging")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CMImaging.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Quagga")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Quagga.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CMCapture")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CMCapture.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreMediaIO")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreMediaIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Sharing")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Sharing.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IDS")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IDS.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Apple80211")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Apple80211.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreWLAN")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/CoreWLAN.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreWiFi")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreWiFi.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IMFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IMFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Marco")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Marco.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("IDSFoundation")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/IDSFoundation.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FTServices")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FTServices.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Engram")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/Engram.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FTAWD")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/FTAWD.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Carbon")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SystemAdministration")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SystemAdministration.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WebKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/WebKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Cocoa")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Cocoa.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CommonPanels")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Help")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ImageCapture")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("OpenScripting")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Ink")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("Print")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SecurityHI")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("login")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/login.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DirectoryService")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/DirectoryService.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DiskImages")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DiskImages.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LoginUICore")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("loginsupport")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("LDAP")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/LDAP.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("TrustEvaluationAgent")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WebKitLegacy")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WebCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CorePrediction")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CorePrediction.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libwebrtc.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SafariSafeBrowsing")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SafariSafeBrowsing.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SecurityInterface")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/SecurityInterface.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("URLFormatting")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/URLFormatting.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WebInspectorUI")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WebInspectorUI.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("JavaScriptCore")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/JavaScriptCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libANGLE-shared.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("NetworkExtension")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/NetworkExtension.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SceneKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/SceneKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CaptiveNetwork")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CaptiveNetwork.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("EAP8021X")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/EAP8021X.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ModelIO")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/ModelIO.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("MetalKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/MetalKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GLKit")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/GLKit.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreOptimization")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreOptimization.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("WirelessDiagnostics")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libAWDSupportFramework.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libAWDSupport.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libprotobuf-lite.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libprotobuf.dylib")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/WirelessDiagnostics.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("CoreServicesInternal")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/CoreServicesInternal.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("FileProvider")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/FileProvider.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("GenerationalStorage")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/GenerationalStorage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("SymptomDiagnosticReporter")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("DesktopServicesPriv")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/DesktopServicesPriv.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("NetAuth")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/NetAuth.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("libCGInterfaces.dylib")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::ProcessModule("ViewBridge")::ProcessModule() -- rejecting framework path "/System/Library/PrivateFrameworks/ViewBridge.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::InitializeSearchPathOptions() -- Setting SDK path "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk"
 SwiftASTContextForExpressions::GetASTContext() -- Using Clang module cache path: /var/folders/k1/3r8wy_zd2l92hztjqhsqw93h00c30v/C/clang/ModuleCache
 SwiftASTContextForExpressions::GetASTContext() -- SDK version: 12.3
 SwiftASTContextForExpressions::GetASTContext() -- Using prebuilt Swift module cache path: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/prebuilt-modules/12.3
 SwiftASTContextForExpressions::RegisterSectionModules("ClassROTPointerAuth") retrieved 1 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::() -- parsed module "ClassROTPointerAuth" from Swift AST section 1/1 in image "ClassROTPointerAuth".
 SwiftASTContextForExpressions::RegisterSectionModules("dyld") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libobjc.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libc++abi.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("liboah.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libc++.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libSystem.B.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcache.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcommonCrypto.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcompiler_rt.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcopyfile.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcorecrypto.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libdispatch.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libdyld.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libkeymgr.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libmacho.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libquarantine.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libremovefile.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_asl.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_blocks.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_c.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_collections.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_configuration.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_containermanager.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_coreservices.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_darwin.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_dnssd.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_featureflags.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_info.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_m.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_malloc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_networkextension.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_notify.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_product_info_filter.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_sandbox.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_secinit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_kernel.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_platform.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_pthread.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_symptoms.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsystem_trace.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libunwind.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libxpc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("UIFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RemoteViewServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("XCTTargetBootstrap") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("InternationalSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("UserActivity") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libspindump.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("UniformTypeIdentifiers") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libapp_launch_measurement.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreAnalytics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreAutoLayout") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreData") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Metal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("liblangid.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreSVG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SkyLight") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreGraphics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Accelerate") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IconServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOSurface") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libDiagnosticMessagesClient.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libz.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ApplicationServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DFRFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libicucore.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AudioToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DataDetectorsCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("TextInput") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Foundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libMobileGestalt.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("HIToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("QuartzCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Security") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SpeechRecognition") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreAudio") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DiskArbitration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MultitouchSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libenergytrace.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PerformanceAnalysis") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OpenGL") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MobileKeyBag") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ColorSync") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreImage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreText") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ImageIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SoftLinking") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libxml2.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcompression.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("TextureIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libate.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("liblzma.5.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SystemConfiguration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libfakelink.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CFNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libarchive.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleSystemInfo") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libbsm.0.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libnetwork.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libkxld.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOMobileFramebuffer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCoreEntitlements.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleFSCompression") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcoretls.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcoretls_cfhelpers.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libpam.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsqlite3.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libxar.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libbz2.1.0.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libpcap.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libdns_services.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libapple_nghttp2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libiconv.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcharset.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FSEvents") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CarbonCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Metadata") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OSServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SearchKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AE") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LaunchServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DictionaryServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SharedFileList") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCheckFix.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("TCC") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreNLP") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MetadataUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libmecabra.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libmecab.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCRFSuite.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libgermantok.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libThaiTokenizer.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("vImage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("vecLib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libvMisc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libvDSP.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libBLAS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libLAPACK.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libLinearAlgebra.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libSparseBLAS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libQuadrature.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libBNNS.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libSparse.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LinguisticData") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Lexicon") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libChineseTokenizer.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LanguageModeling") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleSauce") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreEmoji") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcmph.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CFOpenDirectory") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OpenDirectory") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("APFS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SecurityFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libutil.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreServicesStore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libxslt.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("BackgroundTaskManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libRadiance.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libJPEG.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libPng.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libTIFF.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGIF.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libJP2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libexpat.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleJPEG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libFontParser.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RunningBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOSurfaceAccelerator") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WatchdogClient") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDisplay") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreMedia") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOAccelerator") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreVideo") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MetalPerformanceShaders") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("VideoToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("BaseBoard") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ProtocolBuffer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GPUWrangler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOPresentment") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DSExternalDisplay") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCoreFSCache.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGPUCompilerUtils.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CMCaptureCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppServerSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("perfdata") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AudioToolboxCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("caulk") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libAudioStatistics.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SystemPolicy") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libSMC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreMIDI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libAudioToolboxUtility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OSAServicesClient") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libperfcheck.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libmis.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGLU.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGFXShared.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGL.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libGLImage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCVMSPluginSupport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCoreVMClient.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSImage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSNeuralNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSMatrix") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSRayIntersector") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSNDArray") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MPSFunctions") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MetalTools") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AggregateDictionary") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libIOReport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OpenCL") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FaceCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GraphVisualizer") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FontServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OTSVG") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libFontRegistry.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libhvf.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libXTFontStaticRegistryData.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleVA") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ATS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("HIServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PrintCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("QD") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ColorSyncLegacy") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SpeechSynthesis") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ATSUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcups.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Kerberos") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GSS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libresolv.9.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Heimdal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libHeimdalProxy.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Network") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libheimdal-asn1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CommonAuth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AudioSession") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MediaExperience") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libSessionUtility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AudioResourceArbitration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PowerLog") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IconFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SpeechRecognitionCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SwiftUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Accessibility") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreMaterial") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RenderBox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AttributeGraph") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Combine") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreGlyphs") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreUtils") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IntlPreferences") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RecapPerformanceTesting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftAVFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftAccelerate.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftAppKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCloudKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCore.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreAudio.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreData.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreGraphics.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreImage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreLocation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreMIDI.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftCoreMedia.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftDarwin.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftDispatch.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftFoundation.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftIOKit.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftMetal.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftObjectiveC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftQuartzCore.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftUniformTypeIdentifiers.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftXPC.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswift_Concurrency.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftos.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftsimd.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AXMediaUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AccessibilitySharedSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libAccessibility.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AXCoreUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("NaturalLanguage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AXAssetLoader") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Espresso") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MediaAccessibility") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MobileAsset") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreML") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AVFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AVFAudio") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Montreal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DuetActivityScheduler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MLCompute") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CloudKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MIL") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MLAssetIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDuet") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDuetContext") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CrashReporterSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreTelephony") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDuetDebugLogging") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ApplePushService") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Intents") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDuetDaemonProtocol") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ProactiveSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Rapport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OSAnalytics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Symbolication") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreSymbolication") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MallocStackLogging") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DebugSymbols") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreUtilsExtras") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CommonUtilities") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libTelephonyUtilDynamic.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Bom") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libParallelCompression.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreDaemon") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleSRP") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ServiceManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("UserManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Accounts") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("C2") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreLocation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CloudKitDistributedSync") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ProtectedCloudStorage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PushKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreTime") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AuthKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RTCReporting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CorePhoneNumbers") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DiskManagement") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleIDAuthSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AAAFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("KeychainCircle") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MediaKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DiscRecording") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCoreStorage.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcsfde.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("EFILogin") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OctagonTrust") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GeoServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LocationSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreBluetooth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GeoServicesCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PhoneNumbers") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("RemoteServiceDiscovery") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("PlugInKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IntentsFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FrontBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AssertionServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("BoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("BackBoardServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("InternationalTextSearch") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("StreamingZip") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MetalPerformanceShadersGraph") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ANECompiler") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleNeuralEngine") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libncurses.5.4.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ANEServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsandbox.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libMatch.1.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AVFCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AVFCapture") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IOBluetooth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AudioUnit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AirPlaySync") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MediaToolbox") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreAVCHD") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Mangrove") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AlgosScoreFramework") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CMPhoto") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("AppleVPA") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreAUC") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CMImaging") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Quagga") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CMCapture") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreMediaIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Sharing") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IDS") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Apple80211") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreWLAN") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreWiFi") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IMFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Marco") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("IDSFoundation") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FTServices") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Engram") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libtidy.A.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FTAWD") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Carbon") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SystemAdministration") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WebKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Cocoa") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CommonPanels") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Help") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ImageCapture") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("OpenScripting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Ink") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("Print") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SecurityHI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("login") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DirectoryService") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DiskImages") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LoginUICore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libodfde.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("loginsupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcurl.4.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcrypto.46.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libssl.48.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("LDAP") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("TrustEvaluationAgent") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libsasl2.2.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WebKitLegacy") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WebCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CorePrediction") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libnetworkextension.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libwebrtc.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SafariSafeBrowsing") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SecurityInterface") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("URLFormatting") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WebInspectorUI") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("JavaScriptCore") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libANGLE-shared.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("NetworkExtension") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SceneKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CaptiveNetwork") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("EAP8021X") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ModelIO") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("MetalKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GLKit") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreOptimization") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("WirelessDiagnostics") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libAWDSupportFramework.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libAWDSupport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libprotobuf-lite.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libprotobuf.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("CoreServicesInternal") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("FileProvider") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("GenerationalStorage") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("SymptomDiagnosticReporter") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("DesktopServicesPriv") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("NetAuth") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libcmark-gfm.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libCGInterfaces.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("ViewBridge") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::RegisterSectionModules("libobjc-trampolines.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::CreateInstance((Target*)0x7fcedc809800) = 0x7fce9d0d48b0
 SwiftASTContextForExpressions::LogConfiguration(SwiftASTContext*)0x7fce9d0d48b0:
 SwiftASTContextForExpressions::LogConfiguration() --   Architecture                 : x86_64-apple-macosx11.0.0
 SwiftASTContextForExpressions::LogConfiguration() --   SDK path                     : /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk
 SwiftASTContextForExpressions::LogConfiguration() --   Runtime resource path        : /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift
 SwiftASTContextForExpressions::LogConfiguration() --   Runtime library paths        : (2 items)
 SwiftASTContextForExpressions::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx
 SwiftASTContextForExpressions::LogConfiguration() --     /usr/lib/swift
 SwiftASTContextForExpressions::LogConfiguration() --   Runtime library import paths : (2 items)
 SwiftASTContextForExpressions::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx
 SwiftASTContextForExpressions::LogConfiguration() --     /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift
 SwiftASTContextForExpressions::LogConfiguration() --   Framework search paths       : (0 items)
 SwiftASTContextForExpressions::LogConfiguration() --   Import search paths          : (0 items)
 SwiftASTContextForExpressions::LogConfiguration() --   Extra clang arguments        : (75 items)
 SwiftASTContextForExpressions::LogConfiguration() --     -fno-implicit-modules
 SwiftASTContextForExpressions::LogConfiguration() --     -fno-implicit-module-maps
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=ImageIO=.build/x86_64-apple-macosx/debug/ModuleCache/ImageIO-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ImageIO.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=SwiftUI=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftUI-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Dispatch=.build/x86_64-apple-macosx/debug/ModuleCache/Dispatch-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dispatch/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Darwin=.build/x86_64-apple-macosx/debug/ModuleCache/Darwin-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=os=.build/x86_64-apple-macos-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41x/debug/ModuleCache/os-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Accessibility=.build/x86_64-apple-macosx/debug/ModuleCache/Accessibility-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Accessibility.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreText=.build/x86_64-apple-macosx/debug/ModuleCache/CoreText-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreText.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=UniformTypeIdentifiers=.build/x86_64-apple-macosx/debug/ModuleCache/UniformTypeIdentifiers-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/UniformTypeIdentifiers.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreFoundation=.build/x86_64-apple-macosx/debug/ModuleCache/CoreFoundation-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreFoundation.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=ObjectiveC=.build/x86_64-apple-macosx/debug/ModuleCache/ObjectiveC-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/objc/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=SwiftShims=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift/shims/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Security=.build/x86_64-apple-macosx/debug/ModuleCache/Security-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Security.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreGraphics=.build/x86_64-apple-macosx/debug/ModuleCache/CoreGraphics-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreGraphics.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=_Builtin_stddef_max_align_t=.build/x86_64-apple-macosx/debug/ModuleCache/_Builtin_stddef_max_align_t-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/clang/include/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=DiskArbitration=.build/x86_64-apple-macosx/debug/ModuleCache/DiskArbitration-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/DiskArbitration.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=os_object=.build/x86_64-apple-macosx/debug/ModuleCache/os_object-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreServices=.build/x86_64-apple-macosx/debug/ModuleCache/CoreServices-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreServices.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=os_workgroup=.build/x86_64-apple-macosx/debug/ModuleCache/os_workgroup-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=XPC=.build/x86_64-apple-macosx/debug/ModuleCache/XPC-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/xpc/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=QuartzCore=.build/x86_64-apple-macosx/debug/ModuleCache/QuartzCore-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/QuartzCore.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Foundation=.build/x86_64-apple-macosx/debug/ModuleCache/Foundation-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Foundation.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=OpenGL=.build/x86_64-apple-macosx/debug/ModuleCache/OpenGL-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenGL.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=AppKit=.build/x86_64-apple-macosx/debug/ModuleCache/AppKit-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AppKit.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=ColorSync=.build/x86_64-apple-macosx/debug/ModuleCache/ColorSync-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ColorSync.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=DeveloperToolsSupport=.build/x86_64-apple-macosx/debug/ModuleCache/DeveloperToolsSupport-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/DeveloperToolsSupport.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=MachO=.build/x86_64-apple-macosx/debug/ModuleCache/MachO-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach-o/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=launch=.build/x86_64-apple-macosx/debug/ModuleCache/launch-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=IOSurface=.build/x86_64-apple-macosx/debug/ModuleCache/IOSurface-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/IOSurface.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=ApplicationServices=.build/x86_64-apple-macosx/debug/ModuleCache/ApplicationServices-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/ApplicationServices.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreData=.build/x86_64-apple-macosx/debug/ModuleCache/CoreData-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreData.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Metal=.build/x86_64-apple-macosx/debug/ModuleCache/Metal-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Metal.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=SwiftOverlayShims=.build/x86_64-apple-macosx/debug/ModuleCache/SwiftOverlayShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CFNetwork=.build/x86_64-apple-macosx/debug/ModuleCache/CFNetwork-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CFNetwork.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=_Builtin_intrinsics=.build/x86_64-apple-macosx/debug/ModuleCache/_Builtin_intrinsics-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=ptrauth=.build/x86_64-apple-macosx/debug/ModuleCache/ptrauth-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=libkern=.build/x86_64-apple-macosx/debug/ModuleCache/libkern-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=Printer=.build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Users/ivhernandez13/dev/ClassROTPointerAuth/.build/x86_64-apple-macosx/debug/Printer.build/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreVideo=.build/x86_64-apple-macosx/debug/ModuleCache/CoreVideo-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreVideo.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=IOKit=.build/x86_64-apple-macosx/debug/ModuleCache/IOKit-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/IOKit.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-file=CoreImage=.build/x86_64-apple-macosx/debug/ModuleCache/CoreImage-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm
 SwiftASTContextForExpressions::LogConfiguration() --     -fmodule-map-file=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreImage.framework/Modules/module.modulemap
 SwiftASTContextForExpressions::LogConfiguration() --     -I/Users/ivhernandez13/dev/ClassROTPointerAuth/Sources/Printer/include
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::GetModule("Swift") -- found Swift
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth") -- error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Accessibility-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Darwin-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: module file '.build/x86_64-apple-macosx/debug/ModuleCache/SwiftShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm' is out of date and needs to be rebuilt
imported by module 'SwiftOverlayShims' in '.build/x86_64-apple-macosx/debug/ModuleCache/SwiftOverlayShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm'

 SwiftASTContextForExpressions::LoadOneModule() -- Couldn't import module ClassROTPointerAuth: failed to get module "ClassROTPointerAuth" from AST context:
error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Accessibility-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: class_ro_t pointer authentication was disabled in PCH file but is currently enabled
error: module file .build/x86_64-apple-macosx/debug/ModuleCache/Darwin-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm cannot be loaded due to a configuration mismatch with the current compilation
error: module file '.build/x86_64-apple-macosx/debug/ModuleCache/SwiftShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm' is out of date and needs to be rebuilt
imported by module 'SwiftOverlayShims' in '.build/x86_64-apple-macosx/debug/ModuleCache/SwiftOverlayShims-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm'

 [self 0x7fce9e681ac0] might have a dynamic type
 [self 0x7fce9e681ac0] has a new dynamic type ClassROTPointerAuth.HelloPrinter
 [self 0x7fce9e681ac0] might have a dynamic type
 [self 0x7fce9e681ac0] might have a dynamic type
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- not cached, searching
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found ClassROTPointerAuth.HelloPrinter
 found RecordTypeInfo for instance
 using instance type info

 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::GetModule("_Concurrency") -- found _Concurrency
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport") -- found SwiftOnoneSupport
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 Adding reflection metadata in "/usr/lib/swift/libswiftSwiftOnoneSupport.dylib"
 SwiftASTContextForExpressions::RegisterSectionModules("libswiftSwiftOnoneSupport.dylib") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Found library at: /usr/lib/swift/libswiftSwiftOnoneSupport.dylib.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::GetModule("SwiftUI") -- found SwiftUI
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 Adding reflection metadata in "/System/Library/Frameworks/DeveloperToolsSupport.framework/Versions/A/DeveloperToolsSupport"
 SwiftASTContextForExpressions::ProcessModule("DeveloperToolsSupport")::ProcessModule() -- rejecting framework path "/System/Library/Frameworks/DeveloperToolsSupport.framework" as it has no "Headers" or "Modules" subdirectories.
 SwiftASTContextForExpressions::RegisterSectionModules("DeveloperToolsSupport") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::() -- Found framework at: @rpath/DeveloperToolsSupport.framework/DeveloperToolsSupport.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 [self 0x7fd6f9bb3f60] might have a dynamic type
 [self 0x7fd6f9bb3f60] has a new dynamic type ClassROTPointerAuth.HelloPrinter
 [self 0x7fd6f9bb3f60] might have a dynamic type
 [self 0x7fd6f9bb3f60] might have a dynamic type
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- not cached, searching
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found ClassROTPointerAuth.HelloPrinter
 found RecordTypeInfo for instance
 using instance type info
 SwiftASTContextForExpressions::GetModule("Swift")
 [self 0x7fd67cf76900] might have a dynamic type
 [self 0x7fd67cf76900] has a new dynamic type ClassROTPointerAuth.HelloPrinter
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module ClassROTPointerAuth from {kind = Serialized Swift AST, filename = "ClassROTPointerAuth";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftSwiftOnoneSupport.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- not cached, searching
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found ClassROTPointerAuth.HelloPrinter
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 Adding injected self: type (0x7fd67eae46a0) context(0x7fd67c42f600) is: (class_type decl=ClassROTPointerAuth.(file).HelloPrinter)

 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: ClassROTPointerAuth.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module ClassROTPointerAuth from {kind = Serialized Swift AST, filename = "ClassROTPointerAuth";}
 ::CacheUserImports() -- Performing auto import on found module: Printer.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 ::CacheUserImports() -- Performing auto import on found module: Printer.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 ::CacheUserImports() -- Performing auto import on found module: _Concurrency.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftOnoneSupport.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftSwiftOnoneSupport.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftUI.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftUI.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 SwiftASTContextForExpressions::RegisterSectionModules("$__lldb_expr2") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 using record type info
 [$R0 0x7fd6f9bba8d0] might have a dynamic type
 [$R0 0x7fd6f9bba8d0] has a new dynamic type ClassROTPointerAuth.HelloPrinter
 SwiftASTContextForExpressions::GetModule("Swift")
 [self 0x7fd6f9bbd540] might have a dynamic type
 [self 0x7fd6f9bbd540] has a new dynamic type ClassROTPointerAuth.HelloPrinter
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module ClassROTPointerAuth from {kind = Serialized Swift AST, filename = "ClassROTPointerAuth";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftSwiftOnoneSupport.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForModule("ClassROTPointerAuth")::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 Adding injected self: type (0x7fd67eae46a0) context(0x7fd67c42f600) is: (class_type decl=ClassROTPointerAuth.(file).HelloPrinter)

 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: ClassROTPointerAuth.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module ClassROTPointerAuth from {kind = Serialized Swift AST, filename = "ClassROTPointerAuth";}
 ::CacheUserImports() -- Performing auto import on found module: Printer.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 ::CacheUserImports() -- Performing auto import on found module: Printer.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 ::CacheUserImports() -- Performing auto import on found module: _Concurrency.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftOnoneSupport.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftSwiftOnoneSupport.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftUI.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftUI.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: Printer.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Printer
 SwiftASTContextForExpressions::GetModule("Printer")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Printer from {kind = Clang module, filename = ".build/x86_64-apple-macosx/debug/ModuleCache/Printer-20306afde488b50a0d5da96c5d1db469db2b1c0bea812fcbedeed3407295ab41.pcm";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftOnoneSupport.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftOnoneSupport
 SwiftASTContextForExpressions::GetModule("SwiftOnoneSupport")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftSwiftOnoneSupport".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftSwiftOnoneSupport.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftOnoneSupport from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/SwiftOnoneSupport.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: _Concurrency.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module _Concurrency
 SwiftASTContextForExpressions::GetModule("_Concurrency")
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module _Concurrency from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/_Concurrency.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: SwiftUI.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module SwiftUI
 SwiftASTContextForExpressions::GetModule("SwiftUI")
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "SwiftUI".
 SwiftASTContextForExpressions::() -- Skipping load of SwiftUI.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftAppKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftAppKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swift_Concurrency".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswift_Concurrency.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "AppKit".
 SwiftASTContextForExpressions::() -- Skipping load of AppKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreImage".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreImage.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreImage".
 SwiftASTContextForExpressions::() -- Skipping load of CoreImage.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ApplicationServices".
 SwiftASTContextForExpressions::() -- Skipping load of ApplicationServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreServices".
 SwiftASTContextForExpressions::() -- Skipping load of CoreServices.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftIOKit".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftIOKit.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOKit".
 SwiftASTContextForExpressions::() -- Skipping load of IOKit.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDarwin".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDarwin.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftDispatch".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftDispatch.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftObjectiveC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftObjectiveC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreFoundation".
 SwiftASTContextForExpressions::() -- Skipping load of CoreFoundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DiskArbitration".
 SwiftASTContextForExpressions::() -- Skipping load of DiskArbitration.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CFNetwork".
 SwiftASTContextForExpressions::() -- Skipping load of CFNetwork.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Security".
 SwiftASTContextForExpressions::() -- Skipping load of Security.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftXPC".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftXPC.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ColorSync".
 SwiftASTContextForExpressions::() -- Skipping load of ColorSync.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreText".
 SwiftASTContextForExpressions::() -- Skipping load of CoreText.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreGraphics".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreGraphics.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreGraphics".
 SwiftASTContextForExpressions::() -- Skipping load of CoreGraphics.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "ImageIO".
 SwiftASTContextForExpressions::() -- Skipping load of ImageIO.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftFoundation".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftFoundation.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Foundation".
 SwiftASTContextForExpressions::() -- Skipping load of Foundation.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "OpenGL".
 SwiftASTContextForExpressions::() -- Skipping load of OpenGL.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreVideo".
 SwiftASTContextForExpressions::() -- Skipping load of CoreVideo.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "IOSurface".
 SwiftASTContextForExpressions::() -- Skipping load of IOSurface.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftMetal".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftMetal.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Metal".
 SwiftASTContextForExpressions::() -- Skipping load of Metal.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftQuartzCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftQuartzCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "QuartzCore".
 SwiftASTContextForExpressions::() -- Skipping load of QuartzCore.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCoreData".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCoreData.dylib as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "CoreData".
 SwiftASTContextForExpressions::() -- Skipping load of CoreData.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "Accessibility".
 SwiftASTContextForExpressions::() -- Skipping load of Accessibility.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::() -- Loading linked framework "DeveloperToolsSupport".
 SwiftASTContextForExpressions::() -- Skipping load of DeveloperToolsSupport.framework as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module SwiftUI from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/System/Library/Frameworks/SwiftUI.framework/Modules/SwiftUI.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: Swift.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module Swift
 SwiftASTContextForExpressions::GetModule("Swift")
 SwiftASTContextForExpressions::() -- Loading linked library "swiftCore".
 SwiftASTContextForExpressions::LoadLibraryUsingPaths() -- Skipping module libswiftCore.dylib as it is already loaded.
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module Swift from {kind = Serialized Swift AST, filename = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/lib/swift/Swift.swiftmodule/x86_64-apple-macos.swiftinterface";}
 ::CacheUserImports() -- Performing auto import on found module: ClassROTPointerAuth.

 SwiftASTContextForExpressions::LoadOneModule() -- Importing module ClassROTPointerAuth
 SwiftASTContextForExpressions::GetModule("ClassROTPointerAuth")
 SwiftASTContextForExpressions::LoadOneModule() -- Imported module ClassROTPointerAuth from {kind = Serialized Swift AST, filename = "ClassROTPointerAuth";}
 SwiftASTContextForExpressions::ReconstructType("$sSSD")
 SwiftASTContextForExpressions::ReconstructType("$sSSD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 SwiftASTContextForExpressions::RegisterSectionModules("$__lldb_expr5") retrieved 0 AST Data blobs from the symbol vendor.
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD")
 SwiftASTContextForExpressions::ReconstructType("$ss5Error_pD") -- found in the positive cache
 using record type info
 SwiftASTContextForExpressions::ReconstructType("$sSSD")
 SwiftASTContextForExpressions::ReconstructType("$sSSD") -- found in the positive cache
 using record type info
 SwiftASTContextForExpressions::ReconstructType("$ss11_StringGutsVD")
 SwiftASTContextForExpressions::ReconstructType("$ss11_StringGutsVD") -- not cached, searching
 SwiftASTContextForExpressions::ReconstructType("$ss11_StringGutsVD") -- found Swift._StringGuts
 using record type info
 SwiftASTContextForExpressions::ReconstructType("$ss13_StringObjectVD")
 SwiftASTContextForExpressions::ReconstructType("$ss13_StringObjectVD") -- not cached, searching
 SwiftASTContextForExpressions::ReconstructType("$ss13_StringObjectVD") -- found Swift._StringObject
 using record type info
 SwiftASTContextForExpressions::ReconstructType("$ss6UInt64VD")
 SwiftASTContextForExpressions::ReconstructType("$ss6UInt64VD") -- not cached, searching
 SwiftASTContextForExpressions::ReconstructType("$ss6UInt64VD") -- found Swift.UInt64
 using record type info
 SwiftASTContextForExpressions::ReconstructType("$ss13_StringObjectVD")
 SwiftASTContextForExpressions::ReconstructType("$ss13_StringObjectVD") -- found in the positive cache
 using record type info
 [$R0 0x7fd6f9bba8d0] might have a dynamic type
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD")
 SwiftASTContextForExpressions::ReconstructType("$s19ClassROTPointerAuth12HelloPrinterCD") -- found in the positive cache
 found RecordTypeInfo for instance
 using instance type info
